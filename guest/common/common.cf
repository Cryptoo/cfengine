body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/common/systemd.cf",
              "cryptoo/config/config.cf",
              "cryptoo/config/directory_groups.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/guest/common/guest_network.cf",
              "cryptoo/util/contain.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent common_guest(root, role, arch)

{

  classes:

    any::

      "have_systemctl"
        expression => fileexists("$(root)$(file_names.systemd_app)");

  files:

    any::

      "$(root)$(directory_groups.guest_system)/."
        perms => system,
        create => "true",
        handle => "$(root)$(directory_groups.guest_system)";

      "$(root)$(directory_groups.guest_system_private)/."
        perms => root,
        create => "true",
        handle => "$(root)$(directory_groups.guest_system_private)";

      "$(root)$(file_names.cf_execd_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[cf_execd])",
        classes => default:u_if_repaired("daemon_reload");

      "$(root)$(file_names.cf_monitord_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[cf_monitord])",
        classes => default:u_if_repaired("daemon_reload");

      "$(root)$(file_names.cf_serverd_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[cf_serverd])",
        classes => default:u_if_repaired("daemon_reload");

      "$(root)$(file_names.ipset_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ipset_service])",
        classes => default:u_if_repaired("daemon_reload");

      "$(root)$(file_names.shorewall_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[shorewall_service])",
        classes => default:u_if_repaired("daemon_reload");

      "$(root)$(file_names.serial_autologin)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[serial_autologin])",
        classes => default:u_if_repaired("daemon_reload");

  methods:

    any::

      "configure networking"
        usebundle => guest_network($(this.root), $(this.role));

    have_systemctl::

      "enable systemd services"
        usebundle => systemd_enable($(root), $(file_groups.systemd_enabled[$(this.role)]));

      "start systemd services"
        usebundle => default:standard_services( $(cryptoo:file_groups.systemd_enabled[$(this.role)]), "start");

  commands:

    daemon_reload&have_systemctl::

      "/$(file_names.systemd_app)"
        args => "daemon-reload",
        contain => basic_chroot($(root));

}
