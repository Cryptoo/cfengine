bundle common cryptoo

{

  vars:

    any::

      "bundles" slist => {
                            "cryptoo",
                            "directory_names",
                            "directory_groups",
                            "file_names",
                            "cryptoo_system"
                         };

      "inputs" slist => {
                            "cryptoo/config/directory_names.cf",
                            "cryptoo/config/directory_groups.cf",
                            "cryptoo/config/file_names.cf",
                            "cryptoo/crypttab.cf",
                            "cryptoo/directories.cf",
                            "cryptoo/files.cf",
                            "cryptoo/kconfig.cf",
                            "cryptoo/mounts.cf",
                            "cryptoo/openrc.cf",
                            "cryptoo/system.cf"
                         };


      "kernel_git" string => "git://github.com/cryptoo/kernel";
      "overlay_git" string => "git://github.com/cryptoo/overlay";

    have_machine_names::

      "machine_names" data => readjson("/$(file_names.machine_names)", 1M),
        classes => if_ok("machine_name_available");

    role_master::

      "machine_number" string => "1";

  classes:

    any::

      "have_cryptoo" expression => fileexists("/$(file_names.cryptoo_profile)");
      "role_master" expression => regline("master", "/$(file_names.crypoo_role)");
      "role_undefined" not => fileexists("/$(file_names.crypoo_role)");
      "have_machine_names" expression => fileexists("/$(file_names.machine_names)");
      "need_machine_names" not => fileexists("/$(file_names.machine_names)");

  reports:

    role_master::

      "My role is: master";
      "My number is: $(machine_number)";

    role_master&machine_name_available::

      "My hostname is: $(machine_names[$(machine_number)])";

    role_undefined::

      "My role is: undefined";
      
}
