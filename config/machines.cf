body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/cryptoo.cf",
              "cryptoo/config/file_names.cf"
            };

}

bundle common machines

{

  vars:

    any::

      "machine_number_vars"
        slist => variablesmatching(".*machine_numbers");

      "machine_number_var_string"
        string => nth("machine_number_vars","0");

    have_machine_number::

      "machine_number"
        string => "$($(machine_number_var[1]):$(machine_number_var[2]).$(machine_number_var[3])[$(cryptoo.configured_role)])";

      "hostname"
        string => "$(cryptoo:cryptoo.machine_names[$(machine_number)])";

    have_hostname&(!have_machine_number)::

      "hostname"
        string => "$(cryptoo:cryptoo.configured_hostname)";

      "machine_number"
        string => "$(cryptoo:cryptoo.machine_names_inverse[$(hostname)])";

    cryptoo_host::

      "root_dev"
        string => "/dev/mapper/$(hostname)-root";

      "root_uuid"
        string => execresult("/$(cryptoo:file_names.blkid_app) -s UUID -o value $(root_dev)","noshell");

    !cryptoo_host::

      "root_uuid"
        string => execresult("/$(cryptoo:file_names.blkid_app) -s UUID -o value /dev/vda","noshell");

  classes:

    any::

      "have_machine_number"
        expression => regextract("(.*):(.*)\.(.*)", "$(machine_number_var_string)", "machine_number_var");

  reports:

    verbose_mode&(have_machine_number|(have_hostname&(!have_machine_number)))::

      "My role is: $(cryptoo:cryptoo.configured_role)";
      "My number is: $(machine_number)";
      "My hostname is: $(hostname)";

}