body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
            };

}

bundle common directory_groups

{

  vars:

    any::

      "common_system"
        slist => {
                    $(cryptoo:directory_names.fs_apps_base),
                    $(cryptoo:directory_names.fs_boot_base),
                    $(cryptoo:directory_names.fs_dev_base),
                    $(cryptoo:directory_names.fs_config_base),
                    $(cryptoo:directory_names.fs_config_bash),
                    $(cryptoo:directory_names.fs_config_openrc_env),
                    $(cryptoo:directory_names.fs_config_cryptoo_root),
                    $(cryptoo:directory_names.fs_config_default),
                    $(cryptoo:directory_names.fs_config_environment),
                    $(cryptoo:directory_names.fs_config_gcc_environment),
                    $(cryptoo:directory_names.fs_config_openrc),
                    $(cryptoo:directory_names.fs_config_pm),
                    $(cryptoo:directory_names.fs_config_pm_env),
                    $(cryptoo:directory_names.fs_config_pm_environments),
                    $(cryptoo:directory_names.fs_config_pm_keywords),
                    $(cryptoo:directory_names.fs_config_pm_mask),
                    $(cryptoo:directory_names.fs_config_pm_unmask),
                    $(cryptoo:directory_names.fs_config_pm_use),
                    $(cryptoo:directory_names.fs_config_pm_patches),
                    $(cryptoo:directory_names.fs_config_pm_profile),
                    $(cryptoo:directory_names.fs_config_pm_upstream),
                    $(cryptoo:directory_names.fs_config_run_base),
                    $(cryptoo:directory_names.fs_config_run_boot),
                    $(cryptoo:directory_names.fs_config_run_default),
                    $(cryptoo:directory_names.fs_config_run_sysinit),
                    $(cryptoo:directory_names.fs_config_shorewall),
                    $(cryptoo:directory_names.fs_config_ssh),
                    $(cryptoo:directory_names.fs_config_systemd),
                    $(cryptoo:directory_names.fs_config_network),
                    $(cryptoo:directory_names.fs_config_units),
                    $(cryptoo:directory_names.fs_config_units_multi_user),
                    $(cryptoo:directory_names.fs_home),
                    $(cryptoo:directory_names.fs_mount_base),
                    $(cryptoo:directory_names.fs_mount_root),
                    $(cryptoo:directory_names.fs_mount_temp),
                    $(cryptoo:directory_names.fs_runtime_base),
                    $(cryptoo:directory_names.fs_admin_apps),
                    $(cryptoo:directory_names.fs_standard_base),
                    $(cryptoo:directory_names.fs_standard_apps),
                    $(cryptoo:directory_names.fs_standard_admin_apps),
                    $(cryptoo:directory_names.fs_standard_share),
                    $(cryptoo:directory_names.fs_standard_timezones),
                    $(cryptoo:directory_names.fs_machine_base),
                    $(cryptoo:directory_names.fs_site_base),
                    $(cryptoo:directory_names.fs_site_apps),
                    $(cryptoo:directory_names.fs_site_sources),
                    $(cryptoo:directory_names.fs_standard_sources),
                    $(cryptoo:directory_names.fs_volatile_base),
                    $(cryptoo:directory_names.fs_volatile_library),
                    $(cryptoo:directory_names.fs_volatile_systemd)
                 };

      "common_system_restricted"
        slist => {
                    $(cryptoo:directory_names.fs_proc_base),
                    $(cryptoo:directory_names.fs_sys_base)
                 };

      "common_system_private"
        slist => {
                    $(cryptoo:directory_names.fs_admin_base),
                    $(cryptoo:directory_names.fs_admin_ssh),
                    $(cryptoo:directory_names.fs_volatile_cfengine),
                    $(cryptoo:directory_names.fs_volatile_cf_inputs),
                    $(cryptoo:directory_names.fs_volatile_cf_templates)
                 };

      "common_open"
        slist => {
                    $(cryptoo:directory_names.fs_temp_base),
                    $(cryptoo:directory_names.fs_volatile_temp)
                 };

      "common_pm"
        slist => {
                    $(cryptoo:directory_names.fs_cryptoo),
                    $(cryptoo:directory_names.fs_machine_pm),
                    $(cryptoo:directory_names.fs_machine_pm_meta),
                    $(cryptoo:directory_names.fs_machine_pm_profile),
                    $(cryptoo:directory_names.fs_pm),
                    $(cryptoo:directory_names.fs_site_pm),
                    $(cryptoo:directory_names.fs_volatile_pm),
                    $(cryptoo:directory_names.fs_volatile_overlay)
                 };

      "common_pm_open"
        slist => {
                    $(cryptoo:directory_names.fs_site_srcpkg),
                    $(cryptoo:directory_names.fs_site_binpkg)
                 };

      "common_cryptoo_private"
        slist => {
                    $(cryptoo:directory_names.fs_config_cryptoo_incoming),
                    $(cryptoo:directory_names.fs_config_cryptoo_outgoing)
                 };
      "host_system"
        slist => {
                    $(cryptoo:directory_names.fs_config_dracut),
                    $(cryptoo:directory_names.fs_mount_cryptoo),
                    $(cryptoo:directory_names.fs_volatile_kernel),
                    $(cryptoo:directory_names.fs_volatile_libvirt)
                 };

      "host_system_private"
        slist => {
                    @(this.common_cryptoo_private),
                    $(cryptoo:directory_names.fs_volatile_images)
                 };

      "host_system_storage"
        slist => {
                    $(cryptoo:directory_names.fs_storage_nfs),
                    $(cryptoo:directory_names.fs_storage_site),
                    $(cryptoo:directory_names.fs_storage_apps),
                    $(cryptoo:directory_names.fs_storage_cryptoo),
                    $(cryptoo:directory_names.fs_storage_sources),
                    $(cryptoo:directory_names.fs_storage_kernel)
                 };

      "host_pm"
        slist => {
                    $(cryptoo:directory_names.fs_storage_overlay),
                    $(cryptoo:directory_names.fs_storage_pm),
                    $(cryptoo:directory_names.fs_storage_pm_site),
                    $(cryptoo:directory_names.fs_storage_pm_install),
                    $(cryptoo:directory_names.fs_storage_pm_site_meta),
                    $(cryptoo:directory_names.fs_storage_pm_site_profile),
                    $(cryptoo:directory_names.fs_bitcoin_overlay),
                 };

      "host_pm_open"
        slist => {
                    $(cryptoo:directory_names.fs_storage_srcpkg),
                    $(cryptoo:directory_names.fs_storage_binpkg)
                 };

      "host_qemu"
        slist => {
                    $(cryptoo:directory_names.fs_config_libvirt),
                    $(cryptoo:directory_names.fs_config_qemu),
                    $(cryptoo:directory_names.fs_libvirt_images),
                    $(cryptoo:directory_names.fs_storage_backup)
                 };

      "host_root_qemu"
        slist => {
                    $(cryptoo:directory_names.fs_config_cryptoo_guests),
                    $(cryptoo:directory_names.fs_config_guest_inboxes),
                    $(cryptoo:directory_names.fs_config_guest_outboxes)
                 };

      "guest_system"
        slist => {
                 };

      "guest_system_private"
        slist => {
                    "$(cryptoo:directory_names.fs_mount_root)/$(cryptoo:directory_names.fs_config_cryptoo_incoming)",
                    "$(cryptoo:directory_names.fs_mount_root)/$(cryptoo:directory_names.fs_config_cryptoo_outgoing)"
                 };

}
