body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
            };

}

bundle common file_names

{

  vars:

    any::

      "chmod_app"
        string => "$(directory_names.fs_apps_base)/chmod";
      "chown_app"
        string => "$(directory_names.fs_apps_base)/chown";
      "dd_app"
        string => "$(directory_names.fs_apps_base)/dd";
      "lsblk_app"
        string => "$(directory_names.fs_apps_base)/lsblk";
      "mount_app"
        string => "$(directory_names.fs_apps_base)/mount";
      "move_app"
        string => "$(directory_names.fs_apps_base)/mv";
      "rm_app"
        string => "$(directory_names.fs_apps_base)/rm";
      "setfattr_app"
        string => "$(directory_names.fs_apps_base)/setfattr";
      "tar_app"
        string => "$(directory_names.fs_apps_base)/tar";
      "umount_app"
        string => "$(directory_names.fs_apps_base)/umount";
      "dracut_image"
        string => "$(directory_names.fs_boot_base)/dracut.initramfs.cpio";
      "dmcrypt_key"
        string => "$(directory_names.fs_boot_base)/master.key";
      "null"
        string => "$(directory_names.fs_dev_base)/null";
      "crypttab"
        string => "$(directory_names.fs_config_base)/crypttab";
      "dnsmasq_conf"
        string => "$(directory_names.fs_config_base)/dnsmasq.conf";
      "fstab"
        string => "$(directory_names.fs_config_base)/fstab";
      "group"
        string => "$(directory_names.fs_config_base)/group";
      "hostname_systemd"
        string => "$(directory_names.fs_config_base)/hostname";
      "locale"
        string => "$(directory_names.fs_config_base)/locale.gen";
      "localtime"
        string => "$(directory_names.fs_config_base)/localtime";
      "mtab"
        string => "$(directory_names.fs_config_base)/mtab";
      "networks"
        string => "$(directory_names.fs_config_base)/networks";
      "passwd"
        string => "$(directory_names.fs_config_base)/passwd";
      "dns_config"
        string => "$(directory_names.fs_config_base)/resolv.conf";
      "dns_config_dnsmasq"
        string => "$(directory_names.fs_config_base)/resolv.dnsmasq.conf";
      "shadow"
        string => "$(directory_names.fs_config_base)/shadow";
      "system_bashrc"
        string => "$(directory_names.fs_config_bash)/bashrc";
      "system_bash_logout"
        string => "$(directory_names.fs_config_bash)/bash_logout";
      "dmcrypt_conf"
        string => "$(directory_names.fs_config_openrc_env)/dmcrypt";
      "hostname_openrc"
        string => "$(directory_names.fs_config_openrc_env)/hostname";
      "cryptoo_hostname"
        string => "$(directory_names.fs_config_cryptoo_incoming)/hostname";
      "machine_names"
        string => "$(directory_names.fs_config_cryptoo_incoming)/machine_names.json";
      "cryptoo_role"
        string => "$(directory_names.fs_config_cryptoo_incoming)/role";
      "site_config"
        string => "$(directory_names.fs_config_cryptoo_incoming)/site_config.json";
      "subnet_config"
        string => "$(directory_names.fs_config_cryptoo_incoming)/subnet_config.json";
      "master_ssh_key"
        string => "$(directory_names.fs_config_cryptoo_incoming)/master_ssh_key";
      "grub_defaults"
        string => "$(directory_names.fs_config_default)/grub";
      "dracut_conf"
        string => "$(directory_names.fs_config_dracut)/cryptoo.conf";
      "env_cryptoo"
        string => "$(directory_names.fs_config_environment)/00cryptoo";
      "env_locale"
        string => "$(directory_names.fs_config_environment)/02locale";
      "env_kernel"
        string => "$(directory_names.fs_config_environment)/99kernel";
      "env_gcc_native"
        string => "$(directory_names.fs_config_gcc_environment)/.NATIVE";
      "env_gcc_x86_64"
        string => "$(directory_names.fs_config_gcc_environment)/config-x86_64-pc-linux-gnu";
      "pm_config"
        string => "$(directory_names.fs_config_pm)/make.conf";
      "pm_profile"
        string => "$(directory_names.fs_config_pm)/make.profile";
      "pm_profile_upstream"
        string => "$(directory_names.fs_config_pm_upstream)/parent";
      "openrc_acpid"
        string => "$(directory_names.fs_config_run_boot)/acpid";
      "openrc_devicemapper"
        string => "$(directory_names.fs_config_run_boot)/device-mapper";
      "openrc_dmcrypt"
        string => "$(directory_names.fs_config_run_boot)/dmcrypt";
      "openrc_lvm"
        string => "$(directory_names.fs_config_run_boot)/lvm";
      "openrc_lvmetad"
        string => "$(directory_names.fs_config_run_boot)/lvmetad";
      "openrc_mdraid"
        string => "$(directory_names.fs_config_run_boot)/mdraid";
      "openrc_modules"
        string => "$(directory_names.fs_config_run_boot)/modules";
      "openrc_cf_execd"
        string => "$(directory_names.fs_config_run_default)/cf-execd";
      "openrc_cf_monitord"
        string => "$(directory_names.fs_config_run_default)/cf-monitord";
      "openrc_cf_serverd"
        string => "$(directory_names.fs_config_run_default)/cf-serverd";
      "openrc_consolefont"
        string => "$(directory_names.fs_config_run_default)/consolefont";
      "openrc_dbus"
        string => "$(directory_names.fs_config_run_default)/dbus";
      "openrc_gpm"
        string => "$(directory_names.fs_config_run_default)/gpm";
      "openrc_libvirtd"
        string => "$(directory_names.fs_config_run_default)/libvirtd";
      "openrc_metalog"
        string => "$(directory_names.fs_config_run_default)/metalog";
      "openrc_ntpd"
        string => "$(directory_names.fs_config_run_default)/ntpd";
      "openrc_numlock"
        string => "$(directory_names.fs_config_run_default)/numlock";
      "openrc_rngd"
        string => "$(directory_names.fs_config_run_default)/rngd";
      "openrc_sshd"
        string => "$(directory_names.fs_config_run_default)/sshd";
      "openrc_virtlockd"
        string => "$(directory_names.fs_config_run_default)/virtlockd";
      "openrc_vixiecron"
        string => "$(directory_names.fs_config_run_default)/vixie-cron";
      "openrc_kmod"
        string => "$(directory_names.fs_config_run_sysinit)/kmod-static-nodes";
      "mount_info"
        string => "/proc/self/mountstats";
      "shorewall_config"
        string => "$(directory_names.fs_config_shorewall)/shorewall.conf";
      "shorewall_zones"
        string => "$(directory_names.fs_config_shorewall)/zones";
      "sshd_config"
        string => "$(directory_names.fs_config_ssh)/sshd_config";
      "ssh_config"
        string => "$(directory_names.fs_config_ssh)/ssh_config";
      "i2p_network"
        string => "$(directory_names.fs_config_network)/i2p.network";
      "i2p_bridge_network"
        string => "$(directory_names.fs_config_network)/i2p_bridge.network";
      "ispdmz_network"
        string => "$(directory_names.fs_config_network)/ispdmz.network";
      "ispdmz_bridge_network"
        string => "$(directory_names.fs_config_network)/ispdmz_bridge.network";
      "lan_network"
        string => "$(directory_names.fs_config_network)/lan.network";
      "lan0_network"
        string => "$(directory_names.fs_config_network)/lan0.network";
      "lan1_network"
        string => "$(directory_names.fs_config_network)/lan1.network";
      "lan13_network"
        string => "$(directory_names.fs_config_network)/lan13.network";
      "lan_bridge_network"
        string => "$(directory_names.fs_config_network)/lan_bridge.network";
      "lan_physical_network"
        string => "$(directory_names.fs_config_network)/lan_physical.network";
      "openvpn1_network"
        string => "$(directory_names.fs_config_network)/openvpn1.network";
      "openvpn2_network"
        string => "$(directory_names.fs_config_network)/openvpn2.network";
      "openvpn3_network"
        string => "$(directory_names.fs_config_network)/openvpn3.network";
      "openvpn4_network"
        string => "$(directory_names.fs_config_network)/openvpn4.network";
      "tor_network"
        string => "$(directory_names.fs_config_network)/tor.network";
      "tor_bridge_network"
        string => "$(directory_names.fs_config_network)/tor_bridge.network";
      "vpndmz_network"
        string => "$(directory_names.fs_config_network)/vpndmz.network";
      "vpndmz_bridge_network"
        string => "$(directory_names.fs_config_network)/vpndmz_bridge.network";
      "wan_network"
        string => "$(directory_names.fs_config_network)/wan.network";
      "wan_bridge_network"
        string => "$(directory_names.fs_config_network)/wan_bridge.network";
      "wan_physical_network"
        string => "$(directory_names.fs_config_network)/wan_physical.network";
      "cf_execd_service"
        string => "$(directory_names.fs_config_units)/cf-execd.service";
      "cf_monitord_service"
        string => "$(directory_names.fs_config_units)/cf-monitord.service";
      "cf_serverd_service"
        string => "$(directory_names.fs_config_units)/cf-serverd.service";
      "ipset_service"
        string => "$(directory_names.fs_config_units)/ipset.service";
      "shorewall_service"
        string => "$(directory_names.fs_config_units)/shorewall.service";
      "console_autologin"
        string => "$(directory_names.fs_config_units)/getty@tty1.service.d/autologin.conf";
      "serial_autologin"
        string => "$(directory_names.fs_config_units)/serial-getty@ttyS0.service.d/autologin.conf";
      "proc_mounts"
        string => "proc/self/mounts";
      "authorized_keys"
        string => "$(directory_names.fs_admin_ssh)/authorized_keys";
      "default_key"
        string => "$(directory_names.fs_admin_ssh)/id_ed25519";
      "default_key_public"
        string => "$(directory_names.fs_admin_ssh)/id_ed25519.pub";
      "openrc_softlevel"
        string => "$(directory_names.fs_runtime_base)/openrc/softlevel";
      "blkid_app"
        string => "$(directory_names.fs_admin_apps)/blkid";
      "losetup_app"
        string => "$(directory_names.fs_admin_apps)/losetup";
      "mkfs_app"
        string => "$(directory_names.fs_admin_apps)/mkfs";
      "rc_app"
        string => "$(directory_names.fs_admin_apps)/rc";
      "storage_pm_site_meta"
        string => "$(directory_names.fs_storage_pm_site_meta)/layout.conf";
      "storage_pm_site_repo"
        string => "$(directory_names.fs_storage_pm_site_profile)/repo_name";
      "kernel_makefile"
        string => "$(directory_names.fs_storage_kernel)/Makefile";
      "chroot_app"
        string => "$(directory_names.fs_standard_apps)/chroot";
      "cpu2use_app"
        string => "$(directory_names.fs_standard_apps)/cpuinfo2cpuflags-x86";
      "dracut_app"
        string => "$(directory_names.fs_standard_apps)/dracut";
      "emerge_app"
        string => "$(directory_names.fs_standard_apps)/emerge";
      "find_app"
        string => "$(directory_names.fs_standard_apps)/find";
      "gcc_config_app"
        string => "$(directory_names.fs_standard_apps)/gcc-config";
      "git_app"
        string => "$(directory_names.fs_standard_apps)/git";
      "layman_app"
        string => "$(directory_names.fs_standard_apps)/layman";
      "rsync_app"
        string => "$(directory_names.fs_standard_apps)/rsync";
      "ssh_app"
        string => "$(directory_names.fs_standard_apps)/ssh";
      "ssh_keygen_app"
        string => "$(directory_names.fs_standard_apps)/ssh-keygen";
      "systemd_app"
        string => "$(directory_names.fs_standard_apps)/systemctl";
      "virsh_app"
        string => "$(directory_names.fs_standard_apps)/virsh";
      "cryptoo_perms_app"
        string => "$(directory_names.fs_cryptoo_apps)/cryptoo_perms";
      "distfiles_perms_app"
        string => "$(directory_names.fs_cryptoo_apps)/distfiles_perms";
      "pkgdir_perms_app"
        string => "$(directory_names.fs_cryptoo_apps)/pkgdir_perms";
      "cryptoo_profile"
        string => "$(directory_names.fs_cryptoo_profiles)/repo_name";
      "pm_machine_meta"
        string => "$(directory_names.fs_machine_pm_meta)/layout.conf";
      "pm_machine_repo"
        string => "$(directory_names.fs_machine_pm_profile)/repo_name";
      "envupdate_app"
        string => "$(directory_names.fs_standard_admin_apps)/env-update";
      "groupadd_app"
        string => "$(directory_names.fs_standard_admin_apps)/groupadd";
      "groupmems_app"
        string => "$(directory_names.fs_standard_admin_apps)/groupmems";
      "useradd_app"
        string => "$(directory_names.fs_standard_admin_apps)/useradd";
      "libvirtd_app"
        string => "$(directory_names.fs_standard_admin_apps)/libvirtd";
      "localegen_app"
        string => "$(directory_names.fs_standard_admin_apps)/locale-gen";
      "shorewall_app"
        string => "$(directory_names.fs_standard_admin_apps)/shorewall";
      "sshd_app"
        string => "$(directory_names.fs_standard_admin_apps)/sshd";
      "template_cf_execd"
        string => "common/cf-execd_service.txt",
        meta => { "template" };
      "template_cf_monitord"
        string => "common/cf-monitord_service.txt",
        meta => { "template" };
      "template_cf_serverd"
        string => "common/cf-serverd_service.txt",
        meta => { "template" };
      "template_env_cryptoo"
        string => "common/env_cryptoo.txt",
        meta => { "template" };
      "template_env_locale"
        string => "common/env_locale.txt",
        meta => { "template" };
      "template_fstab"
        string => "common/fstab.txt",
        meta => { "template" };
      "template_fstab_mustache"
        string => "common/fstab_mustache.txt",
        meta => { "template" };
      "template_ini"
        string => "common/ini_mustache.txt",
        meta => { "template" };
      "template_ipset_service"
        string => "common/ipset_service.txt",
        meta => { "template" };
      "template_libvirt"
        string => "common/libvirt_mustache.txt",
        meta => { "template" };
      "template_local_layout_conf"
        string => "common/local_layout_conf.txt",
        meta => { "template" };
      "template_local_repo_name"
        string => "common/local_repo_name.txt",
        meta => { "template" };
      "template_make_conf"
        string => "common/make_conf.txt",
        meta => { "template" };
      "template_networks"
        string => "common/networks.txt",
        meta => { "template" };
      "template_profile_parent"
        string => "common/profile_parent.txt",
        meta => { "template" };
      "template_resolv"
        string => "common/resolv_mustache.txt",
        meta => { "template" };
      "template_serial_autologin"
        string => "common/serial_autologin.txt",
        meta => { "template" };
      "template_shorewall_zone"
        string => "common/shorewall_zone_mustache.txt",
        meta => { "template" };
      "template_value"
        string => "common/value_mustache.txt",
        meta => { "template" };
      "template_dnsmasq"
        string => "guest/dnsmasq_mustache.txt",
        meta => { "template" };
      "template_crypttab"
        string => "host/crypttab.txt",
        meta => { "template" };
      "template_dmcrypt"
        string => "host/dmcrypt.txt",
        meta => { "template" };
      "template_dracut_conf"
        string => "host/dracut_conf.txt",
        meta => { "template" };
      "template_env_kernel"
        string => "host/env_kernel.txt",
        meta => { "template" };
      "template_machine_names"
        string => "host/machine_names.txt",
        meta => { "template" };
      "template_shorewall_service"
        string => "common/shorewall_service.txt",
        meta => { "template" };
      "template_site_config"
        string => "host/site_config.txt",
        meta => { "template" };
      "template_site_repo_name"
        string => "host/site_repo_name.txt",
        meta => { "template" };
      "template_subnets"
        string => "host/subnets.txt",
        meta => { "template" };
      "overlay_conf"
        string => "$(directory_names.fs_volatile_overlay)/make.conf";
      "bitcoin_overlay"
        string => "$(directory_names.fs_bitcoin_overlay)/profiles/repo_name";
      "random_seed"
        string => "$(directory_names.fs_volatile_systemd)/random-seed";
      "pm_installed_sets"
        string => "$(directory_names.fs_volatile_pm)/world_sets";

}
