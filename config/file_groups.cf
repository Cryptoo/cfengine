body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf"
            };

}

bundle common file_groups

{

  vars:

    any::

################################################################################
#                                   Common
################################################################################

      "make_profile[common]"
        string => "cryptoo";

      "pm_env[common]"
        slist => {
                    "local_distfiles",
                    "nosandbox",
                    "notmpfs"
                 };

      "pm_environment[common]"
        slist => {
                    "cryptoo"
                 };

      "keywords[common]"
        slist => {
                    "basic_programs",
                    "virtualization"
                 };

      "mask[common]"
        slist => {
                    "basic_programs",
                    "problematic"
                 };

      "unmask[common]"
        slist => {
                 };

      "use[common]"
        slist => {
                    "basic_programs",
                    "systemd",
                    "virtualization"
                 };

      "unuse[common]"
        slist => {
                    "systemd_bootstrap",
                    "udev"
                 };

      "profile[common]"
        slist => {
                    "package.provided"
                 };

      "systemd_enabled[common]"
        slist => {
                    "acpid.service",
                    "cf-execd.service",
                    "cf-monitord.service",
                    "cf-serverd.service",
                    "ipset.service",
                    "shorewall.service",
                    "sshd.service",
                    "systemd-networkd.service",
                    "systemd-timesyncd.service",
                    "tmux@root.service",
                    "vixie-cron.service"
                 };

      "backup_dir[common]"
        string => "/$(directory_names.mount_backup)";

      "firewall_zones[common]"
        slist => {
                    "net",
                    "idmz",
                    "vdmz",
                    "tor",
                    "onion",
                    "i2p",
                    "eep",
                    "lan",
                 };

      "firewall_bridges[common]"
        slist => {
                 };

      "firewall[common]"
        string => '
          {
            "policy":
                 [
                 ],
               }
          }
        ';

      "network[common]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               }
          }
        ';

      "dns_type[common]"
        string => "internal";

################################################################################
#                                 Undefined
################################################################################

      "make_profile[undefined]"
        string => "$(make_profile[common])";

      "pm_env[undefined]"
        slist => {
                    "@(pm_env[common])"
                 };

      "pm_environment[undefined]"
        slist => {
                    "@(pm_environment[common])"
                 };

      "keywords[undefined]"
        slist => {
                    "@(keywords[common])"
                 };

      "mask[undefined]"
        slist => {
                    "@(mask[common])"
                 };

      "unmask[undefined]"
        slist => {
                    "@(unmask[common])"
                 };

      "use[undefined]"
        slist => {
                    "@(use[common])"
                 };

      "unuse[undefined]"
        slist => {
                    "@(unuse[common])"
                 };

      "profile[undefined]"
        slist => {
                    "@(profile[common])"
                 };

      "systemd_enabled[undefined]"
        slist => {
                    "@(systemd_enabled[common])"
                 };

      "backup_dir[undefined]"
        string => "$(backup_dir[common])";

      "firewall_zones[undefined]"
        slist => {
                    "@(firewall_zones[common])"
                 };

      "firewall_bridges[undefined]"
        slist => {
                    "@(firewall_bridges[common])"
                 };

      "firewall[undefined]"
        string => "$(firewall[common])";

      "network[undefined]"
        string => "$(network[common])";

      "dns_type[undefined]"
        string => "$(dns_type[common])";

################################################################################
#                                    host
################################################################################

      "make_profile[host]"
        string => "$(make_profile[common])";

      "pm_env[host]"
        slist => {
                    "@(pm_env[common])"
                 };

      "pm_environment[host]"
        slist => {
                    "@(pm_environment[common])"
                 };

      "keywords[host]"
        slist => {
                    "@(keywords[common])"
                 };

      "mask[host]"
        slist => {
                    "@(mask[common])"
                 };

      "unmask[host]"
        slist => {
                    "@(unmask[common])"
                 };

      "use[host]"
        slist => {
                    "@(use[common])",
                    "host"
                 };

      "unuse[host]"
        slist => {
                    "@(unuse[common])",
                    "gpm.service"
                 };

      "profile[host]"
        slist => {
                    "@(profile[common])"
                 };

      "systemd_enabled[host]"
        slist => {
                    "@(systemd_enabled[common])",
                    "libvirtd.service",
                    "libvirt-guests.service",
                    "virtlogd.socket"
                 };

      "backup_dir[host]"
        string => "$(backup_dir[common])";

      "firewall_zones[host]"
        slist => {
                    "@(firewall_zones[common])"
                 };

      "firewall_bridges[host]"
        slist => {
                    "@(firewall_bridges[common])"
                 };

      "firewall[host]"
        string => "$(firewall[common])";

      "network[host]"
        string => "$(network[common])";

      "dns_type[host]"
        string => "$(dns_type[common])";

################################################################################
#                                   master
################################################################################

      "make_profile[master]"
        string => "$(make_profile[host])";

      "pm_env[master]"
        slist => {
                    "@(pm_env[host])"
                 };

      "pm_environment[master]"
        slist => {
                    "@(pm_environment[host])"
                 };

      "keywords[master]"
        slist => {
                    "@(keywords[host])"
                 };

      "mask[master]"
        slist => {
                    "@(mask[host])"
                 };

      "unmask[master]"
        slist => {
                    "@(unmask[host])"
                 };

      "use[master]"
        slist => {
                    "@(use[host])",
                    "simplegit",
                    "master"
                 };

      "unuse[master]"
        slist => {
                    "@(unuse[host])"
                 };

      "profile[master]"
        slist => {
                    "@(profile[host])"
                 };

      "systemd_enabled[master]"
        slist => {
                    "@(systemd_enabled[host])"
                 };

      "backup_dir[master]"
        string => "$(backup_dir[host])";

      "firewall_zones[master]"
        slist => {
                    "@(firewall_zones[host])"
                 };

      "firewall_bridges[master]"
        slist => {
                    "@(firewall_bridges[host])",
                    "wan_bridge",
                    "ispdmz_bridge",
                    "vpndmz_bridge",
                    "tor_bridge",
                    "i2p_bridge",
                    "lan_bridge"
                 };

      "firewall[master]"
        string => "$(firewall[host])";

      "network[master]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "wan",
                     "ispdmz",
                     "tor",
                     "i2p",
                     "vpndmz",
                     "lan"
                   ],
                 "veth":
                   [
                     "lantap"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "wan_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "wan"
                       }
                   },
                 "ispdmz_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "ispdmz"
                       }
                   },
                 "tor_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "tor"
                       }
                   },
                 "i2p_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "i2p"
                       }
                   },
                 "vpndmz_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "vpndmz"
                       }
                   },
                 "lan_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "lan"
                       }
                   },
                 "veth_pair":
                   {
                     "type": "bridge_member",
                     "params":
                       {
                         "bridge": "lan"
                       }
                   },
                 "wan_physical":
                   {
                     "type": "physical",
                     "params":
                       {
                         "bridge": "wan",
                         "device": "$(site.config[host_network][wan_physical])"
                       }
                   },
                 "lan_physical":
                   {
                     "type": "physical",
                     "params":
                       {
                         "bridge": "lan",
                         "device": "$(site.config[host_network][lan_physical])"
                       }
                   },
                 "lantap":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "lan",
                         "gateway": "firewall_internal",
                         "ipforward": "no"
                       }
                   }
               }
          }
        ';

      "dns_type[master]"
        string => "$(dns_type[host])";

################################################################################
#                                desktop_host
################################################################################

      "make_profile[desktop_host]"
        string => "cryptoo/desktop/kde";

      "pm_env[desktop_host]"
        slist => {
                    "@(pm_env[host])"
                 };

      "pm_environment[desktop_host]"
        slist => {
                    "@(pm_environment[host])"
                 };

      "keywords[desktop_host]"
        slist => {
                    "@(keywords[host])"
                 };

      "mask[desktop_host]"
        slist => {
                    "@(mask[host])"
                 };

      "unmask[desktop_host]"
        slist => {
                    "@(unmask[host])"
                 };

      "use[desktop_host]"
        slist => {
                    "@(use[host])",
                    "desktop_host"
                 };

      "unuse[desktop_host]"
        slist => {
                    "@(unuse[host])",
                    "simplegit"
                 };

      "profile[desktop_host]"
        slist => {
                    "@(profile[host])"
                 };

      "systemd_enabled[desktop_host]"
        slist => {
                    "@(systemd_enabled[host])",
                    "sddm"
                 };

      "backup_dir[desktop_host]"
        string => "$(backup_dir[host])";

      "firewall_zones[desktop_host]"
        slist => {
                    "@(firewall_zones[host])"
                 };

      "firewall_bridges[desktop_host]"
        slist => {
                    "@(firewall_bridges[host])"
                 };

      "firewall[desktop_host]"
        string => "$(firewall[host])";

      "network[desktop_host]"
        string => "$(network[host])";

      "dns_type[desktop_host]"
        string => "$(dns_type[host])";

################################################################################
#                                    guest
################################################################################

      "make_profile[guest]"
        string => "$(make_profile[common])";

      "pm_env[guest]"
        slist => {
                    "@(pm_env[common])"
                 };

      "pm_environment[guest]"
        slist => {
                    "@(pm_environment[common])"
                 };

      "keywords[guest]"
        slist => {
                    "@(keywords[common])"
                 };

      "mask[guest]"
        slist => {
                    "@(mask[common])"
                 };

      "unmask[guest]"
        slist => {
                    "@(unmask[common])"
                 };

      "use[guest]"
        slist => {
                    "@(use[common])",
                    "simplegit",
                    "guest"
                 };

      "unuse[guest]"
        slist => {
                    "@(unuse[common])"
                 };

      "profile[guest]"
        slist => {
                    "@(profile[common])"
                 };

      "systemd_enabled[guest]"
        slist => {
                    "@(systemd_enabled[common])"
                 };

      "backup_dir[guest]"
        string => "$(backup_dir[common])";

      "firewall_zones[guest]"
        slist => {
                    "@(firewall_zones[common])"
                 };

      "firewall_bridges[guest]"
        slist => {
                    "@(firewall_bridges[common])"
                 };

      "firewall[guest]"
        string => "$(firewall[common])";

      "network[guest]"
        string => "$(network[common])";

      "dns_type[guest]"
        string => "$(dns_type[common])";

################################################################################
#                              desktop_guest
################################################################################

      "make_profile[desktop_guest]"
        string => "cryptoo/desktop";

      "pm_env[desktop_guest]"
        slist => {
                    "@(pm_env[guest])"
                 };

      "pm_environment[desktop_guest]"
        slist => {
                    "@(pm_environment[guest])",
                    "desktop_guest"
                 };

      "keywords[desktop_guest]"
        slist => {
                    "@(keywords[guest])",
                    "desktop",
                    "gstreamer",
                    "X"
                 };

      "mask[desktop_guest]"
        slist => {
                    "@(mask[guest])",
                    "desktop_guest"
                 };

      "unmask[desktop_guest]"
        slist => {
                    "@(unmask[guest])"
                 };

      "use[desktop_guest]"
        slist => {
                    "@(use[guest])",
                    "desktop",
                    "desktop_guest",
                    "X"
                 };

      "unuse[desktop_guest]"
        slist => {
                    "@(unuse[guest])"
                 };

      "profile[desktop_guest]"
        slist => {
                    "@(profile[guest])"
                 };

      "systemd_enabled[desktop_guest]"
        slist => {
                    "@(systemd_enabled[guest])"
                 };

      "backup_dir[desktop_guest]"
        string => "/$(directory_names.cryptoo_home)";

      "firewall_zones[desktop_guest]"
        slist => {
                    "@(firewall_zones[guest])"
                 };

      "firewall_bridges[desktop_guest]"
        slist => {
                    "@(firewall_bridges[guest])"
                 };

      "firewall[desktop_guest]"
        string => "$(firewall[guest])";

      "network[desktop_guest]"
        string => "$(network[guest])";

      "dns_type[desktop_guest]"
        string => "$(dns_type[guest])";

################################################################################
#                              chroot_desktop_no_multilib
################################################################################

      "make_profile[chroot_desktop_no_multilib]"
        string => "$(make_profile[desktop_guest])/chroot";

      "pm_env[chroot_desktop_no_multilib]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[chroot_desktop_no_multilib]"
        slist => {
                    "@(pm_environment[guest])"
                 };

      "keywords[chroot_desktop_no_multilib]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "browsers",
                    "mail_client"
                 };

      "mask[chroot_desktop_no_multilib]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[chroot_desktop_no_multilib]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[chroot_desktop_no_multilib]"
        slist => {
                    "@(use[desktop_guest])",
                    "browsers",
                    "irc_client",
                    "mail_client"
                 };

      "unuse[chroot_desktop_no_multilib]"
        slist => {
                    "@(unuse[desktop_guest])"
                 };

      "profile[chroot_desktop_no_multilib]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "systemd_enabled[chroot_desktop_no_multilib]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "backup_dir[chroot_desktop_no_multilib]"
        string => "$(backup_dir[desktop_guest])";

      "firewall_zones[chroot_desktop_no_multilib]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[chroot_desktop_no_multilib]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[chroot_desktop_no_multilib]"
        string => "$(firewall[desktop_guest])";

      "network[chroot_desktop_no_multilib]"
        string => "$(network[desktop_guest])";

      "dns_type[chroot_desktop_no_multilib]"
        string => "$(dns_type[desktop_guest])";

################################################################################
#                                 irc_client
################################################################################

      "make_profile[irc_client]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[irc_client]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[irc_client]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[irc_client]"
        slist => {
                    "@(keywords[desktop_guest])"
                 };

      "mask[irc_client]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[irc_client]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[irc_client]"
        slist => {
                    "@(use[desktop_guest])",
                    "irc_client"
                 };

      "unuse[irc_client]"
        slist => {
                    "@(unuse[desktop_guest])"
                 };

      "profile[irc_client]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "systemd_enabled[irc_client]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "backup_dir[irc_client]"
        string => "$(backup_dir[desktop_guest])";

      "firewall_zones[irc_client]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[irc_client]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[irc_client]"
        string => "$(firewall[desktop_guest])";

      "network[irc_client]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "lan",
                         "gateway": "firewall_internal",
                         "ipforward": "no"
                       }
                   }
               }
          }
        ';

      "dns_type[irc_client]"
        string => "$(dns_type[desktop_guest])";

################################################################################
#                                 mail_client
################################################################################

      "make_profile[mail_client]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[mail_client]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[mail_client]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[mail_client]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "mail_client"
                 };

      "mask[mail_client]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[mail_client]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[mail_client]"
        slist => {
                    "@(use[desktop_guest])",
                    "mail_client"
                 };

      "unuse[mail_client]"
        slist => {
                    "@(unuse[desktop_guest])"
                 };

      "profile[mail_client]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "systemd_enabled[mail_client]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "backup_dir[mail_client]"
        string => "$(backup_dir[desktop_guest])";

      "firewall_zones[mail_client]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[mail_client]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[mail_client]"
        string => "$(firewall[desktop_guest])";

      "network[mail_client]"
        string =>  '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "lan",
                         "gateway": "firewall_internal",
                         "ipforward": "no"
                       }
                   }
               }
          }
        ';

      "dns_type[mail_client]"
        string => "$(dns_type[desktop_guest])";

################################################################################
#                                     web
################################################################################

      "make_profile[web]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[web]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[web]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[web]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "browsers"
                 };

      "mask[web]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[web]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[web]"
        slist => {
                    "@(use[desktop_guest])",
                    "browsers"
                 };

      "unuse[web]"
        slist => {
                    "@(unuse[desktop_guest])"
                 };

      "profile[web]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "systemd_enabled[web]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "backup_dir[web]"
        string => "$(backup_dir[desktop_guest])";

      "firewall_zones[web]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[web]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[web]"
        string => "$(firewall[desktop_guest])";

      "network[web]"
        string => "$(network[desktop_guest])";

      "dns_type[web]"
        string => "$(dns_type[desktop_guest])";

################################################################################
#                              chroot_desktop_multilib
################################################################################

      "make_profile[chroot_desktop_multilib]"
        string => "$(make_profile[desktop_guest])/multilib/chroot";

      "pm_env[chroot_desktop_multilib]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[chroot_desktop_multilib]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[chroot_desktop_multilib]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "im"
                 };

      "mask[chroot_desktop_multilib]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[chroot_desktop_multilib]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[chroot_desktop_multilib]"
        slist => {
                    "@(use[desktop_guest])",
                    "im"
                 };

      "unuse[chroot_desktop_multilib]"
        slist => {
                    "@(unuse[desktop_guest])"
                 };

      "profile[chroot_desktop_multilib]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "systemd_enabled[chroot_desktop_multilib]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "backup_dir[chroot_desktop_multilib]"
        string => "$(backup_dir[desktop_guest])";

      "firewall_zones[chroot_desktop_multilib]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[chroot_desktop_multilib]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[chroot_desktop_multilib]"
        string => "$(firewall[desktop_guest])";

      "network[chroot_desktop_multilib]"
        string => "$(network[desktop_guest])";

      "dns_type[chroot_desktop_multilib]"
        string => "$(dns_type[desktop_guest])";

################################################################################
#                                      im
################################################################################

      "make_profile[im]"
        string => "$(make_profile[desktop_guest])/multilib";

      "pm_env[im]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[im]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[im]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "im"
                 };

      "mask[im]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[im]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[im]"
        slist => {
                    "@(use[desktop_guest])",
                    "im"
                 };

      "unuse[im]"
        slist => {
                    "@(unuse[desktop_guest])"
                 };

      "profile[im]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "systemd_enabled[im]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "backup_dir[im]"
        string => "$(backup_dir[desktop_guest])";

      "firewall_zones[im]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[im]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[im]"
        string => "$(firewall[desktop_guest])";

      "network[im]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "lan",
                         "gateway": "firewall_internal",
                         "ipforward": "no"
                       }
                   }
               }
          }
        ';

      "dns_type[im]"
        string => "$(dns_type[desktop_guest])";

################################################################################
#                              server_guest
################################################################################

      "make_profile[server_guest]"
        string => "$(make_profile[guest])";

      "pm_env[server_guest]"
        slist => {
                    "@(pm_env[guest])"
                 };

      "pm_environment[server_guest]"
        slist => {
                    "@(pm_environment[guest])"
                 };

      "keywords[server_guest]"
        slist => {
                    "@(keywords[guest])"
                 };

      "mask[server_guest]"
        slist => {
                    "@(mask[guest])"
                 };

      "unmask[server_guest]"
        slist => {
                    "@(unmask[guest])",
                    "firewall_external"
                 };

      "use[server_guest]"
        slist => {
                    "@(use[guest])"
                 };

      "unuse[server_guest]"
        slist => {
                    "@(unuse[guest])"
                 };

      "profile[server_guest]"
        slist => {
                    "@(profile[guest])"
                 };

      "systemd_enabled[server_guest]"
        slist => {
                    "@(systemd_enabled[guest])"
                 };

      "backup_dir[server_guest]"
        string => "$(backup_dir[guest])";

      "firewall_zones[server_guest]"
        slist => {
                    "@(firewall_zones[guest])"
                 };

      "firewall_bridges[server_guest]"
        slist => {
                    "@(firewall_bridges[guest])"
                 };

      "firewall[server_guest]"
        string => "$(firewall[guest])";

      "network[server_guest]"
        string => "$(network[guest])";

      "dns_type[server_guest]"
        string => "$(dns_type[guest])";

################################################################################
#                              chroot_server_no_multilib
################################################################################

      "make_profile[chroot_server_no_multilib]"
        string => "cryptoo/chroot";

      "pm_env[chroot_server_no_multilib]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[chroot_server_no_multilib]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[chroot_server_no_multilib]"
        slist => {
                    "@(keywords[server_guest])",
                    "bitcoin",
                    "bitmessage",
                    "btcd",
                    "deluge",
                    "dns",
                    "freenet",
                    "i2p",
                    "java",
                    "mail_server",
                    "namecoin",
                    "router",
                    "samba",
                    "tor",
                    "vpn",
                    "znc"
                 };

      "mask[chroot_server_no_multilib]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[chroot_server_no_multilib]"
        slist => {
                    "@(unmask[server_guest])",
                    "java"
                 };

      "use[chroot_server_no_multilib]"
        slist => {
                    "@(use[server_guest])",
                    "bitcoin",
                    "bitcoin_wallet",
                    "boost",
                    "deluge",
                    "deluge_server",
                    "dns",
                    "freenet",
                    "i2p",
                    "java",
                    "mail_server",
                    "router",
                    "samba_server",
                    "tor",
                    "vpn",
                    "znc"
                 };

      "unuse[chroot_server_no_multilib]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[chroot_server_no_multilib]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[chroot_server_no_multilib]"
        slist => {
                    "@(systemd_enabled[server_guest])"
                 };

      "backup_dir[chroot_server_no_multilib]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[chroot_server_no_multilib]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[chroot_server_no_multilib]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[chroot_server_no_multilib]"
        string => "$(firewall[server_guest])";

      "network[chroot_server_no_multilib]"
        string => "$(network[server_guest])";

      "dns_type[chroot_server_no_multilib]"
        string => "$(dns_type[server_guest])";

################################################################################
#                             firewall_external
################################################################################

      "make_profile[firewall_external]"
        string => "$(make_profile[server_guest])";

      "pm_env[firewall_external]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[firewall_external]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[firewall_external]"
        slist => {
                    "@(keywords[server_guest])",
                    "router"
                 };

      "mask[firewall_external]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[firewall_external]"
        slist => {
                    "@(unmask[server_guest])",
                    "firewall_external"
                 };

      "use[firewall_external]"
        slist => {
                    "@(use[server_guest])",
                    "router"
                 };

      "unuse[firewall_external]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[firewall_external]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[firewall_external]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "noip.service"
                 };

      "backup_dir[firewall_external]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[firewall_external]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[firewall_external]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[firewall_external]"
        string => '
          {
            "policy":
                 [
                   { "source": "idmz", "destination": "net", "policy": "ACCEPT", "log_level": "" },
                   { "source": "net", "destination": "fw", "policy": "DROP", "log_level": "" }
                 ],
               }
          }
        ';

      "network[firewall_external]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "dhcp",
                     "params":
                       {
                         "zone": "wan",
                         "ipforward": "ipv4"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "ispdmz",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "vpn_primary",
                             "eep": "vpn_primary",
                             "tor": "vpn_primary",
                             "i2p": "vpn_primary",
                             "vpndmz": "vpn_primary",
                             "lan": "vpn_primary"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[firewall_external]"
        string => "external";

################################################################################
#                             tor
################################################################################

      "make_profile[tor]"
        string => "$(make_profile[server_guest])";

      "pm_env[tor]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[tor]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[tor]"
        slist => {
                    "@(keywords[server_guest])",
                    "tor"
                 };

      "mask[tor]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[tor]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[tor]"
        slist => {
                    "@(use[server_guest])",
                    "tor"
                 };

      "unuse[tor]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[tor]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[tor]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "polipo@tor",
                    "tor"
                 };

      "backup_dir[tor]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[tor]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[tor]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[tor]"
        string => "$(firewall[server_guest])";

      "network[tor]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "tor",
                         "ipforward": "no",
                         "routes":
                           {
                             "eep": "firewall_internal",
                             "i2p": "firewall_internal",
                             "vpndmz": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[tor]"
        string => "external";

################################################################################
#                             i2p
################################################################################

      "make_profile[i2p]"
        string => "$(make_profile[server_guest])";

      "pm_env[i2p]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[i2p]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[i2p]"
        slist => {
                    "@(keywords[server_guest])",
                    "i2p",
                    "java"
                 };

      "mask[i2p]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[i2p]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[i2p]"
        slist => {
                    "@(use[server_guest])",
                    "i2p",
                    "java"
                 };

      "unuse[i2p]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[i2p]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[i2p]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "i2p",
                    "privoxy",
                    "unbound"
                 };

      "backup_dir[i2p]"
        string => "/$(directory_names.i2p_base)";

      "firewall_zones[i2p]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[i2p]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[i2p]"
        string => "$(firewall[server_guest])";

      "network[i2p]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "i2p",
                         "ipforward": "no",
                         "routes":
                           {
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "vpndmz": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[i2p]"
        string => "external";

################################################################################
#                             freenet
################################################################################

      "make_profile[freenet]"
        string => "$(make_profile[server_guest])";

      "pm_env[freenet]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[freenet]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[freenet]"
        slist => {
                    "@(keywords[server_guest])",
                    "freenet",
                    "java"
                 };

      "mask[freenet]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[freenet]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[freenet]"
        slist => {
                    "@(use[server_guest])",
                    "freenet",
                    "java"
                 };

      "unuse[freenet]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[freenet]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[freenet]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "freenet"
                 };

      "backup_dir[freenet]"
        string => "/$(directory_names.freenet_base)";

      "firewall_zones[freenet]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[freenet]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[freenet]"
        string => "$(firewall[server_guest])";

      "network[freenet]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "no",
                         "routes":
                           {
                             "i2p": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "onion": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[freenet]"
        string => "external";

################################################################################
#                             bitmessage
################################################################################

      "make_profile[bitmessage]"
        string => "$(make_profile[server_guest])";

      "pm_env[bitmessage]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[bitmessage]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[bitmessage]"
        slist => {
                    "@(keywords[server_guest])",
                    "bitmessage"
                 };

      "mask[bitmessage]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[bitmessage]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[bitmessage]"
        slist => {
                    "@(use[server_guest])",
                    "bitmessage",
                    "boost"
                 };

      "unuse[bitmessage]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[bitmessage]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[bitmessage]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "bitmessage",
                    "bmwrapper",
                    "bmwrapper-pop",
                    "bmwrapper-smtp"
                 };

      "backup_dir[bitmessage]"
        string => "/$(directory_names.bitmessage_base)";

      "firewall_zones[bitmessage]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[bitmessage]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[bitmessage]"
        string => "$(firewall[server_guest])";

      "network[bitmessage]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "no",
                         "routes":
                           {
                             "i2p": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "onion": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[bitmessage]"
        string => "external";

################################################################################
#                             bitcoin
################################################################################

      "make_profile[bitcoin]"
        string => "$(make_profile[server_guest])";

      "pm_env[bitcoin]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[bitcoin]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[bitcoin]"
        slist => {
                    "@(keywords[server_guest])",
                    "bitcoin"
                 };

      "mask[bitcoin]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[bitcoin]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[bitcoin]"
        slist => {
                    "@(use[server_guest])",
                    "bitcoin",
                    "bitcoin_wallet",
                    "boost"
                 };

      "unuse[bitcoin]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[bitcoin]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[bitcoin]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "bitcoind"
                 };

      "backup_dir[bitcoin]"
        string => "/$(directory_names.bitcoin_base)";

      "firewall_zones[bitcoin]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[bitcoin]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[bitcoin]"
        string => "$(firewall[server_guest])";

      "network[bitcoin]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "no",
                         "routes":
                           {
                             "i2p": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "onion": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[bitcoin]"
        string => "external";

################################################################################
#                             bitcoin_testnet
################################################################################

      "make_profile[bitcoin_testnet]"
        string => "$(make_profile[server_guest])";

      "pm_env[bitcoin_testnet]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[bitcoin_testnet]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[bitcoin_testnet]"
        slist => {
                    "@(keywords[server_guest])",
                    "bitcoin"
                 };

      "mask[bitcoin_testnet]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[bitcoin_testnet]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[bitcoin_testnet]"
        slist => {
                    "@(use[server_guest])",
                    "bitcoin",
                    "bitcoin_wallet",
                    "boost"
                 };

      "unuse[bitcoin_testnet]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[bitcoin_testnet]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[bitcoin_testnet]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "bitcoind"
                 };

      "backup_dir[bitcoin_testnet]"
        string => "/$(directory_names.bitcoin_base)";

      "firewall_zones[bitcoin_testnet]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[bitcoin_testnet]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[bitcoin_testnet]"
        string => "$(firewall[server_guest])";

      "network[bitcoin_testnet]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "no",
                         "routes":
                           {
                             "i2p": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "onion": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[bitcoin_testnet]"
        string => "external";

################################################################################
#                             btcd
################################################################################

      "make_profile[btcd]"
        string => "$(make_profile[server_guest])";

      "pm_env[btcd]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[btcd]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[btcd]"
        slist => {
                    "@(keywords[server_guest])",
                    "btcd"
                 };

      "mask[btcd]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[btcd]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[btcd]"
        slist => {
                    "@(use[server_guest])"
                 };

      "unuse[btcd]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[btcd]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[btcd]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "btcd"
                 };

      "backup_dir[btcd]"
        string => "/$(directory_names.btcd_base)";

      "firewall_zones[btcd]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[btcd]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[btcd]"
        string => "$(firewall[server_guest])";

      "network[btcd]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "no",
                         "routes":
                           {
                             "i2p": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "onion": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[btcd]"
        string => "external";

################################################################################
#                             btcd_testnet
################################################################################

      "make_profile[btcd_testnet]"
        string => "$(make_profile[server_guest])";

      "pm_env[btcd_testnet]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[btcd_testnet]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[btcd_testnet]"
        slist => {
                    "@(keywords[server_guest])",
                    "btcd"
                 };

      "mask[btcd_testnet]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[btcd_testnet]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[btcd_testnet]"
        slist => {
                    "@(use[server_guest])"
                 };

      "unuse[btcd_testnet]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[btcd_testnet]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[btcd_testnet]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "btcd"
                 };

      "backup_dir[btcd_testnet]"
        string => "/$(directory_names.btcd_base)";

      "firewall_zones[btcd_testnet]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[btcd_testnet]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[btcd_testnet]"
        string => "$(firewall[server_guest])";

      "network[btcd_testnet]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "no"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "no",
                         "routes":
                           {
                             "i2p": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "onion": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[btcd_testnet]"
        string => "external";

################################################################################
#                             vpn_primary
################################################################################

      "make_profile[vpn_primary]"
        string => "$(make_profile[server_guest])";

      "pm_env[vpn_primary]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[vpn_primary]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[vpn_primary]"
        slist => {
                    "@(keywords[server_guest])",
                    "router"
                 };

      "mask[vpn_primary]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[vpn_primary]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[vpn_primary]"
        slist => {
                    "@(use[server_guest])",
                    "router"
                 };

      "unuse[vpn_primary]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[vpn_primary]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[vpn_primary]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "openvpn-client@primary.service"
                 };

      "backup_dir[vpn_primary]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[vpn_primary]"
        slist => {
                    "@(firewall_zones[server_guest])",
                    "vpn"
                 };

      "firewall_bridges[vpn_primary]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[vpn_primary]"
        string => '
          {
            "policy":
                 [
                   { "source": "vdmz", "destination": "vpn", "policy": "ACCEPT", "log_level": "" },
                   { "source": "vdmz", "destination": "net", "policy": "DROP", "log_level": "" },
                   { "source": "lan", "destination": "vpn", "policy": "ACCEPT", "log_level": "" },
                   { "source": "lan", "destination": "net", "policy": "DROP", "log_level": "" },
                   { "source": "vpn", "destination": "fw", "policy": "DROP", "log_level": "" }
                 ],
               }
          }
        ';

      "network[vpn_primary]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "backup_dns": "firewall_external"
                           }
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   },
                 "openvpn":
                   {
                     "type": "virtual",
                     "params":
                       {
                         "zone": "vpn",
                         "ipforward": "ipv4"
                       }
                   }
               }
          }
        ';

      "dns_type[vpn_primary]"
        string => "alternate";

################################################################################
#                             dns
################################################################################

      "make_profile[dns]"
        string => "$(make_profile[server_guest])";

      "pm_env[dns]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[dns]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[dns]"
        slist => {
                    "@(keywords[server_guest])",
                    "dns"
                 };

      "mask[dns]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[dns]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[dns]"
        slist => {
                    "@(use[server_guest])",
                    "dns"
                 };

      "unuse[dns]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[dns]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[dns]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "dnsmasq"
                 };

      "backup_dir[dns]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[dns]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[dns]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[dns]"
        string => "$(firewall[server_guest])";

      "network[dns]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "vpndmz",
                         "gateway": "vpn_primary",
                         "ipforward": "no",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[dns]"
        string => "$(dns_type[server_guest])";

################################################################################
#                             mail_server
################################################################################

      "make_profile[mail_server]"
        string => "$(make_profile[server_guest])";

      "pm_env[mail_server]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[mail_server]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[mail_server]"
        slist => {
                    "@(keywords[server_guest])",
                    "mail_server"
                 };

      "mask[mail_server]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[mail_server]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[mail_server]"
        slist => {
                    "@(use[server_guest])",
                    "mail_server"
                 };

      "unuse[mail_server]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[mail_server]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[mail_server]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "dovecot.service",
                    "fetchmail.service",
                    "postfix.service"
                 };

      "backup_dir[mail_server]"
        string => "/$(directory_names.mail_spool)";

      "firewall_zones[mail_server]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[mail_server]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[mail_server]"
        string => "$(firewall[server_guest])";

      "network[mail_server]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "vpndmz",
                         "gateway": "vpn_primary",
                         "ipforward": "no",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[mail_server]"
        string => "$(dns_type[server_guest])";

################################################################################
#                             vpn_secondary
################################################################################

      "make_profile[vpn_secondary]"
        string => "$(make_profile[server_guest])";

      "pm_env[vpn_secondary]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[vpn_secondary]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[vpn_secondary]"
        slist => {
                    "@(keywords[server_guest])",
                    "router"
                 };

      "mask[vpn_secondary]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[vpn_secondary]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[vpn_secondary]"
        slist => {
                    "@(use[server_guest])",
                    "router"
                 };

      "unuse[vpn_secondary]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[vpn_secondary]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[vpn_secondary]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "openvpn-client@secondary.service"
                 };

      "backup_dir[vpn_secondary]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[vpn_secondary]"
        slist => {
                    "@(firewall_zones[server_guest])",
                    "vpn"
                 };

      "firewall_bridges[vpn_secondary]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[vpn_secondary]"
        string => '
          {
            "policy":
                 [
                   { "source": "vdmz", "destination": "vpn", "policy": "ACCEPT", "log_level": "" },
                   { "source": "vdmz", "destination": "net", "policy": "DROP", "log_level": "" },
                   { "source": "lan", "destination": "vpn", "policy": "ACCEPT", "log_level": "" },
                   { "source": "lan", "destination": "net", "policy": "DROP", "log_level": "" },
                   { "source": "vpn", "destination": "fw", "policy": "DROP", "log_level": "" }
                 ],
               }
          }
        ';

      "network[vpn_secondary]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "backup_dns": "firewall_external"
                           }
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   },
                 "openvpn":
                   {
                     "type": "virtual",
                     "params":
                       {
                         "zone": "vpn",
                         "ipforward": "ipv4"
                       }
                   }
               }
          }
        ';

      "dns_type[vpn_secondary]"
        string => "alternate";

################################################################################
#                             irc_bouncer
################################################################################

      "make_profile[irc_bouncer]"
        string => "$(make_profile[server_guest])";

      "pm_env[irc_bouncer]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[irc_bouncer]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[irc_bouncer]"
        slist => {
                    "@(keywords[server_guest])",
                    "znc"
                 };

      "mask[irc_bouncer]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[irc_bouncer]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[irc_bouncer]"
        slist => {
                    "@(use[server_guest])",
                    "znc"
                 };

      "unuse[irc_bouncer]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[irc_bouncer]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[irc_bouncer]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "znc.service"
                 };

      "backup_dir[irc_bouncer]"
        string => "/$(directory_names.volatile_znc)";

      "firewall_zones[irc_bouncer]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[irc_bouncer]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[irc_bouncer]"
        string => "$(firewall[server_guest])";

      "network[irc_bouncer]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "vpndmz",
                         "gateway": "vpn_secondary",
                         "ipforward": "no",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

      "dns_type[irc_bouncer]"
        string => "$(dns_type[server_guest])";

################################################################################
#                              firewall_internal
################################################################################

      "make_profile[firewall_internal]"
        string => "$(make_profile[server_guest])";

      "pm_env[firewall_internal]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[firewall_internal]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[firewall_internal]"
        slist => {
                    "@(keywords[server_guest])"
                 };

      "mask[firewall_internal]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[firewall_internal]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[firewall_internal]"
        slist => {
                    "@(use[server_guest])"
                 };

      "unuse[firewall_internal]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[firewall_internal]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[firewall_internal]"
        slist => {
                    "@(systemd_enabled[server_guest])"
                 };

      "backup_dir[firewall_internal]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[firewall_internal]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[firewall_internal]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[firewall_internal]"
        string => '
          {
            "policy":
                 [
                   { "source": "lan", "destination": "net", "policy": "ACCEPT", "log_level": "" },
                   { "source": "lan", "destination": "onion", "policy": "ACCEPT", "log_level": "" },
                   { "source": "lan", "destination": "eep", "policy": "ACCEPT", "log_level": "" },
                   { "source": "vdmz", "destination": "onion", "policy": "ACCEPT", "log_level": "" },
                   { "source": "vdmz", "destination": "eep", "policy": "ACCEPT", "log_level": "" }
                 ],
               }
          }
        ';

      "network[firewall_internal]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ],
                 "tun":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "vpndmz",
                         "gateway": "vpn_primary",
                         "ipforward": "ipv4"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "tor",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "tor"
                           }
                       }
                   },
                 "eth2":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "i2p",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "eep": "i2p"
                           }
                       }
                   },
                 "eth3":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "lan",
                         "ipforward": "ipv4"
                       }
                   }
               }
          }
        ';

      "dns_type[firewall_internal]"
        string => "$(dns_type[server_guest])";

################################################################################
#                              vpn_server
################################################################################

      "make_profile[vpn_server]"
        string => "$(make_profile[server_guest])";

      "pm_env[vpn_server]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[vpn_server]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[vpn_server]"
        slist => {
                    "@(keywords[server_guest])",
                    "vpn"
                 };

      "mask[vpn_server]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[vpn_server]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[vpn_server]"
        slist => {
                    "@(use[server_guest])",
                    "vpn"
                 };

      "unuse[vpn_server]"
        slist => {
                    "@(unuse[server_guest])"
                 };

      "profile[vpn_server]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "systemd_enabled[vpn_server]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "openvpn-server@tun-tcp",
                    "openvpn-server@tun-udp",
                    "openvpn-server@tap-tcp",
                    "openvpn-server@tap-udp"
                 };

      "backup_dir[vpn_server]"
        string => "$(backup_dir[server_guest])";

      "firewall_zones[vpn_server]"
        slist => {
                    "@(firewall_zones[server_guest])",
                    "vpntt",
                    "vpntu"
                 };

      "firewall_bridges[vpn_server]"
        slist => {
                    "@(firewall_bridges[server_guest])",
                    "lan_bridge_vpn"
                 };

      "firewall[vpn_server]"
        string => '
          {
            "policy":
                 [
                   { "source": "l13", "destination": "l0", "policy": "ACCEPT", "log_level": "" }
                 ],
               }
          }
        ';

      "network[vpn_server]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "lan"
                   ],
                 "veth":
                   [
                     "lantap"
                   ],
                 "tap":
                   [
                     "openvpn1",
                     "openvpn2"
                   ],
                 "tun":
                   [
                     "openvpn3",
                     "openvpn4"
                   ]
               },
             "interfaces":
               {
                 "openvpn_tap_udp":
                   {
                     "type": "tap",
                     "params":
                       {
                         "device": "openvpn_tap_udp",
                         "bridge": "lan"
                       }
                   },
                 "openvpn_tap_tcp":
                   {
                     "type": "tap",
                     "params":
                       {
                         "device": "openvpn_tap_tcp",
                         "bridge": "lan"
                       }
                   },
                 "openvpn_tun_udp":
                   {
                     "type": "tun",
                     "params":
                       {
                         "device": "openvpn_tun_udp",
                         "ipforward": "ipv4"
                       }
                   },
                 "openvpn_tun_tcp":
                   {
                     "type": "tun",
                     "params":
                       {
                         "device": "openvpn_tun_tcp",
                         "ipforward": "ipv4"
                       }
                   },
                 "lan_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "lan"
                       }
                   },
                 "veth_pair":
                   {
                     "type": "bridge_member",
                     "params":
                       {
                         "bridge": "lan"
                       }
                   },
                 "lan_physical":
                   {
                     "type": "physical",
                     "params":
                       {
                         "bridge": "lan",
                         "device": "eth1"
                       }
                   },
                 "lantap":
                   {
                     "type": "restricted_gateway",
                     "params":
                       {
                         "zone": "lan",
                         "gateway": "firewall_internal",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "vpndmz": "firewall_internal"
                           }
                       }
                   },
                 "eth0":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "ispdmz",
                         "ipforward": "no"
                       }
                   }
               }
          }
        ';

      "dns_type[vpn_server]"
        string => "$(dns_type[server_guest])";

}
