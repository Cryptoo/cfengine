body file control

{

  namespace => "cryptoo";

}

bundle common file_groups

{

  vars:

    any::

################################################################################
#                                   Common
################################################################################

      "make_profile[common]"
        string => "cryptoo";

      "pm_env[common]"
        slist => {
                    "local_distfiles",
                    "nosandbox",
                    "notmpfs"
                 };

      "pm_environment[common]"
        slist => {
                    "cryptoo"
                 };

      "keywords[common]"
        slist => {
                    "basic_programs",
                    "virtualization"
                 };

      "mask[common]"
        slist => {
                    "basic_programs",
                    "problematic"
                 };

      "unmask[common]"
        slist => {
                 };

      "use[common]"
        slist => {
                    "basic_programs",
                    "simplegit",
                    "systemd",
                    "virtualization"
                 };

      "profile[common]"
        slist => {
                    "package.provided"
                 };

      "use_udev[common]"
        slist => {
                    "systemd_bootstrap",
                    "udev"
                 };

      "use_systemd[common]"
        slist => {
                    "systemd"
                 };

      "unuse_udev[common]"
        slist => {
                    "systemd"
                 };

      "unuse_systemd[common]"
        slist => {
                    "systemd_bootstrap",
                    "udev"
                 };

      "systemd_enabled[common]"
        slist => {
                    "acpid.service",
                    "cf-execd.service",
                    "cf-monitord.service",
                    "cf-serverd.service",
                    "ipset.service",
                    "shorewall.service",
                    "sshd.service",
                    "systemd-networkd.service",
                    "vixie-cron.service"
                 };

      "firewall_zones[common]"
        slist => {
                    "net",
                    "idmz",
                    "vdmz",
                    "tor",
                    "onion",
                    "i2p",
                    "eep",
                    "lan",
                 };

      "firewall_bridges[common]"
        slist => {
                 };

      "firewall[common]"
        string => '
          {
            "policy":
                 [
                 ],
               }
          }
        ';

      "network[common]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               }
          }
        ';

################################################################################
#                                 Undefined
################################################################################

      "make_profile[undefined]"
        string => "$(make_profile[common])";

      "pm_env[undefined]"
        slist => {
                    "@(pm_env[common])"
                 };

      "pm_environment[undefined]"
        slist => {
                    "@(pm_environment[common])"
                 };

      "keywords[undefined]"
        slist => {
                    "@(keywords[common])"
                 };

      "mask[undefined]"
        slist => {
                    "@(mask[common])"
                 };

      "unmask[undefined]"
        slist => {
                    "@(unmask[common])"
                 };

      "use[undefined]"
        slist => {
                    "@(use[common])"
                 };

      "profile[undefined]"
        slist => {
                    "@(profile[common])"
                 };

      "use_udev[undefined]"
        slist => {
                    "@(use_udev[common])"
                 };

      "use_systemd[undefined]"
        slist => {
                    "@(use_systemd[common])"
                 };

      "unuse_udev[undefined]"
        slist => {
                    "@(unuse_udev[common])"
                 };

      "unuse_systemd[undefined]"
        slist => {
                    "@(unuse_systemd[common])"
                 };

      "systemd_enabled[undefined]"
        slist => {
                    "@(systemd_enabled[common])"
                 };

      "firewall_zones[undefined]"
        slist => {
                    "@(firewall_zones[common])"
                 };

      "firewall_bridges[undefined]"
        slist => {
                    "@(firewall_bridges[common])"
                 };

      "firewall[undefined]"
        string => "$(firewall[common])";

      "network[undefined]"
        string => "$(network[common])";

################################################################################
#                                    host
################################################################################

      "make_profile[host]"
        string => "$(make_profile[common])";

      "pm_env[host]"
        slist => {
                    "@(pm_env[common])"
                 };

      "pm_environment[host]"
        slist => {
                    "@(pm_environment[common])"
                 };

      "keywords[host]"
        slist => {
                    "@(keywords[common])"
                 };

      "mask[host]"
        slist => {
                    "@(mask[common])"
                 };

      "unmask[host]"
        slist => {
                    "@(unmask[common])"
                 };

      "use[host]"
        slist => {
                    "@(use[common])",
                    "host"
                 };

      "profile[host]"
        slist => {
                    "@(profile[common])"
                 };

      "use_udev[host]"
        slist => {
                    "@(use_udev[common])"
                 };

      "use_systemd[host]"
        slist => {
                    "@(use_systemd[common])"
                 };

      "unuse_udev[host]"
        slist => {
                    "@(unuse_udev[common])"
                 };

      "unuse_systemd[host]"
        slist => {
                    "@(unuse_systemd[common])",
                    "gpm.service"
                 };

      "systemd_enabled[host]"
        slist => {
                    "@(systemd_enabled[common])"
                 };

      "firewall_zones[host]"
        slist => {
                    "@(firewall_zones[common])"
                 };

      "firewall_bridges[host]"
        slist => {
                    "@(firewall_bridges[common])"
                 };

      "firewall[host]"
        string => "$(firewall[common])";

      "network[host]"
        string => "$(network[common])";

################################################################################
#                                   master
################################################################################

      "make_profile[master]"
        string => "$(make_profile[host])";

      "pm_env[master]"
        slist => {
                    "@(pm_env[host])"
                 };

      "pm_environment[master]"
        slist => {
                    "@(pm_environment[host])"
                 };

      "keywords[master]"
        slist => {
                    "@(keywords[host])"
                 };

      "mask[master]"
        slist => {
                    "@(mask[host])"
                 };

      "unmask[master]"
        slist => {
                    "@(unmask[host])"
                 };

      "use[master]"
        slist => {
                    "@(use[host])",
                    "master"
                 };

      "profile[master]"
        slist => {
                    "@(profile[host])"
                 };

      "use_udev[master]"
        slist => {
                    "@(use_udev[host])"
                 };

      "use_systemd[master]"
        slist => {
                    "@(use_systemd[host])"
                 };

      "unuse_udev[master]"
        slist => {
                    "@(unuse_udev[host])"
                 };

      "unuse_systemd[master]"
        slist => {
                    "@(unuse_systemd[host])"
                 };

      "systemd_enabled[master]"
        slist => {
                    "@(systemd_enabled[host])"
                 };

      "firewall_zones[master]"
        slist => {
                    "@(firewall_zones[host])"
                 };

      "firewall_bridges[master]"
        slist => {
                    "@(firewall_bridges[host])",
                    "wan_bridge",
                    "ispdmz_bridge",
                    "vpndmz_bridge",
                    "tor_bridge",
                    "i2p_bridge",
                    "lan_bridge"
                 };

      "firewall[master]"
        string => "$(firewall[host])";

      "network[master]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "wan",
                     "ispdmz",
                     "tor",
                     "i2p",
                     "vpndmz",
                     "lan"
                   ],
                 "veth":
                   [
                     "lantap"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "wan_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "wan"
                       }
                   },
                 "ispdmz_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "ispdmz"
                       }
                   },
                 "tor_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "tor"
                       }
                   },
                 "i2p_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "i2p"
                       }
                   },
                 "vpndmz_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "vpndmz"
                       }
                   },
                 "lan_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "lan"
                       }
                   },
                 "veth_pair":
                   {
                     "type": "bridge_member",
                     "params":
                       {
                         "bridge": "lan"
                       }
                   },
                 "wan_physical":
                   {
                     "type": "physical",
                     "params":
                       {
                         "bridge": "wan",
                         "device": "$(site.config[host_network][wan_physical])"
                       }
                   },
                 "lan_physical":
                   {
                     "type": "physical",
                     "params":
                       {
                         "bridge": "lan",
                         "device": "$(site.config[host_network][lan_physical])"
                       }
                   },
                 "lantap":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "lan",
                         "gateway": "firewall_internal",
                         "ipforward": "false"
                       }
                   }
               }
          }
        ';

################################################################################
#                                desktop_host
################################################################################

      "make_profile[desktop_host]"
        string => "cryptoo/desktop/kde";

      "pm_env[desktop_host]"
        slist => {
                    "@(pm_env[host])"
                 };

      "pm_environment[desktop_host]"
        slist => {
                    "@(pm_environment[host])"
                 };

      "keywords[desktop_host]"
        slist => {
                    "@(keywords[host])"
                 };

      "mask[desktop_host]"
        slist => {
                    "@(mask[host])"
                 };

      "unmask[desktop_host]"
        slist => {
                    "@(unmask[host])"
                 };

      "use[desktop_host]"
        slist => {
                    "@(use[host])",
                    "desktop_host"
                 };

      "profile[desktop_host]"
        slist => {
                    "@(profile[host])"
                 };

      "use_udev[desktop_host]"
        slist => {
                    "@(use_udev[host])"
                 };

      "use_systemd[desktop_host]"
        slist => {
                    "@(use_systemd[host])"
                 };

      "unuse_udev[desktop_host]"
        slist => {
                    "@(unuse_udev[host])"
                 };

      "unuse_systemd[desktop_host]"
        slist => {
                    "@(unuse_systemd[host])"
                 };

      "systemd_enabled[desktop_host]"
        slist => {
                    "@(systemd_enabled[host])"
                 };

      "firewall_zones[desktop_host]"
        slist => {
                    "@(firewall_zones[host])"
                 };

      "firewall_bridges[desktop_host]"
        slist => {
                    "@(firewall_bridges[host])"
                 };

      "firewall[desktop_host]"
        string => "$(firewall[host])";

      "network[desktop_host]"
        string => "$(network[host])";

################################################################################
#                                    guest
################################################################################

      "make_profile[guest]"
        string => "$(make_profile[common])";

      "pm_env[guest]"
        slist => {
                    "@(pm_env[common])"
                 };

      "pm_environment[guest]"
        slist => {
                    "@(pm_environment[common])"
                 };

      "keywords[guest]"
        slist => {
                    "@(keywords[common])"
                 };

      "mask[guest]"
        slist => {
                    "@(mask[common])"
                 };

      "unmask[guest]"
        slist => {
                    "@(unmask[common])"
                 };

      "use[guest]"
        slist => {
                    "@(use[common])"
                 };

      "profile[guest]"
        slist => {
                    "@(profile[common])"
                 };

      "use_udev[guest]"
        slist => {
                    "@(use_udev[common])"
                 };

      "use_systemd[guest]"
        slist => {
                    "@(use_systemd[common])"
                 };

      "unuse_udev[guest]"
        slist => {
                    "@(unuse_udev[common])"
                 };

      "unuse_systemd[guest]"
        slist => {
                    "@(unuse_systemd[common])"
                 };

      "systemd_enabled[guest]"
        slist => {
                    "@(systemd_enabled[common])"
                 };

      "firewall_zones[guest]"
        slist => {
                    "@(firewall_zones[common])"
                 };

      "firewall_bridges[guest]"
        slist => {
                    "@(firewall_bridges[common])"
                 };

      "firewall[guest]"
        string => "$(firewall[common])";

      "network[guest]"
        string => "$(network[common])";

################################################################################
#                              desktop_guest
################################################################################

      "make_profile[desktop_guest]"
        string => "cryptoo/desktop";

      "pm_env[desktop_guest]"
        slist => {
                    "@(pm_env[guest])"
                 };

      "pm_environment[desktop_guest]"
        slist => {
                    "@(pm_environment[guest])"
                 };

      "keywords[desktop_guest]"
        slist => {
                    "@(keywords[guest])",
                    "desktop",
                    "X"
                 };

      "mask[desktop_guest]"
        slist => {
                    "@(mask[guest])",
                    "desktop_guest"
                 };

      "unmask[desktop_guest]"
        slist => {
                    "@(unmask[guest])"
                 };

      "use[desktop_guest]"
        slist => {
                    "@(use[guest])",
                    "desktop",
                    "desktop_guest",
                    "X"
                 };

      "profile[desktop_guest]"
        slist => {
                    "@(profile[guest])"
                 };

      "use_udev[desktop_guest]"
        slist => {
                    "@(use_udev[guest])"
                 };

      "use_systemd[desktop_guest]"
        slist => {
                    "@(use_systemd[guest])"
                 };

      "unuse_udev[desktop_guest]"
        slist => {
                    "@(unuse_udev[guest])"
                 };

      "unuse_systemd[desktop_guest]"
        slist => {
                    "@(unuse_systemd[guest])"
                 };

      "systemd_enabled[desktop_guest]"
        slist => {
                    "@(systemd_enabled[guest])"
                 };

      "firewall_zones[desktop_guest]"
        slist => {
                    "@(firewall_zones[guest])"
                 };

      "firewall_bridges[desktop_guest]"
        slist => {
                    "@(firewall_bridges[guest])"
                 };

      "firewall[desktop_guest]"
        string => "$(firewall[guest])";

      "network[desktop_guest]"
        string => "$(network[guest])";

################################################################################
#                              chroot_desktop
################################################################################

      "make_profile[chroot_desktop]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[chroot_desktop]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[chroot_desktop]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[chroot_desktop]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "browsers",
                    "mail_client"
                 };

      "mask[chroot_desktop]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[chroot_desktop]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[chroot_desktop]"
        slist => {
                    "@(use[desktop_guest])",
                    "browsers",
                    "irc_client",
                    "mail_client"
                 };

      "profile[chroot_desktop]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "use_udev[chroot_desktop]"
        slist => {
                    "@(use_udev[desktop_guest])"
                 };

      "use_systemd[chroot_desktop]"
        slist => {
                    "@(use_systemd[desktop_guest])"
                 };

      "unuse_udev[chroot_desktop]"
        slist => {
                    "@(unuse_udev[desktop_guest])"
                 };

      "unuse_systemd[chroot_desktop]"
        slist => {
                    "@(unuse_systemd[desktop_guest])"
                 };

      "systemd_enabled[chroot_desktop]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "firewall_zones[chroot_desktop]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[chroot_desktop]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[chroot_desktop]"
        string => "$(firewall[desktop_guest])";

      "network[chroot_desktop]"
        string => "$(network[desktop_guest])";

################################################################################
#                                 irc_client
################################################################################

      "make_profile[irc_client]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[irc_client]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[irc_client]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[irc_client]"
        slist => {
                    "@(keywords[desktop_guest])"
                 };

      "mask[irc_client]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[irc_client]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[irc_client]"
        slist => {
                    "@(use[desktop_guest])",
                    "irc_client"
                 };

      "profile[irc_client]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "use_udev[irc_client]"
        slist => {
                    "@(use_udev[desktop_guest])"
                 };

      "use_systemd[irc_client]"
        slist => {
                    "@(use_systemd[desktop_guest])"
                 };

      "unuse_udev[irc_client]"
        slist => {
                    "@(unuse_udev[desktop_guest])"
                 };

      "unuse_systemd[irc_client]"
        slist => {
                    "@(unuse_systemd[desktop_guest])"
                 };

      "systemd_enabled[irc_client]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "firewall_zones[irc_client]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[irc_client]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[irc_client]"
        string => "$(firewall[desktop_guest])";

      "network[irc_client]"
        string => "$(network[desktop_guest])";

################################################################################
#                                 mail_client
################################################################################

      "make_profile[mail_client]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[mail_client]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[mail_client]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[mail_client]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "mail_client"
                 };

      "mask[mail_client]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[mail_client]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[mail_client]"
        slist => {
                    "@(use[desktop_guest])",
                    "mail_client"
                 };

      "profile[mail_client]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "use_udev[mail_client]"
        slist => {
                    "@(use_udev[desktop_guest])"
                 };

      "use_systemd[mail_client]"
        slist => {
                    "@(use_systemd[desktop_guest])"
                 };

      "unuse_udev[mail_client]"
        slist => {
                    "@(unuse_udev[desktop_guest])"
                 };

      "unuse_systemd[mail_client]"
        slist => {
                    "@(unuse_systemd[desktop_guest])"
                 };

      "systemd_enabled[mail_client]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "firewall_zones[mail_client]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[mail_client]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[mail_client]"
        string => "$(firewall[desktop_guest])";

      "network[mail_client]"
        string => "$(network[desktop_guest])";

################################################################################
#                                     web
################################################################################

      "make_profile[web]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[web]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[web]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[web]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "browsers"
                 };

      "mask[web]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[web]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[web]"
        slist => {
                    "@(use[desktop_guest])",
                    "browsers"
                 };

      "profile[web]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "use_udev[web]"
        slist => {
                    "@(use_udev[desktop_guest])"
                 };

      "use_systemd[web]"
        slist => {
                    "@(use_systemd[desktop_guest])"
                 };

      "unuse_udev[web]"
        slist => {
                    "@(unuse_udev[desktop_guest])"
                 };

      "unuse_systemd[web]"
        slist => {
                    "@(unuse_systemd[desktop_guest])"
                 };

      "systemd_enabled[web]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "firewall_zones[web]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[web]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[web]"
        string => "$(firewall[desktop_guest])";

      "network[web]"
        string => "$(network[desktop_guest])";

################################################################################
#                                      im
################################################################################

      "make_profile[im]"
        string => "$(make_profile[desktop_guest])";

      "pm_env[im]"
        slist => {
                    "@(pm_env[desktop_guest])"
                 };

      "pm_environment[im]"
        slist => {
                    "@(pm_environment[desktop_guest])"
                 };

      "keywords[im]"
        slist => {
                    "@(keywords[desktop_guest])",
                    "im"
                 };

      "mask[im]"
        slist => {
                    "@(mask[desktop_guest])"
                 };

      "unmask[im]"
        slist => {
                    "@(unmask[desktop_guest])"
                 };

      "use[im]"
        slist => {
                    "@(use[desktop_guest])",
                    "im"
                 };

      "profile[im]"
        slist => {
                    "@(profile[desktop_guest])"
                 };

      "use_udev[im]"
        slist => {
                    "@(use_udev[desktop_guest])"
                 };

      "use_systemd[im]"
        slist => {
                    "@(use_systemd[desktop_guest])"
                 };

      "unuse_udev[im]"
        slist => {
                    "@(unuse_udev[desktop_guest])"
                 };

      "unuse_systemd[im]"
        slist => {
                    "@(unuse_systemd[desktop_guest])"
                 };

      "systemd_enabled[im]"
        slist => {
                    "@(systemd_enabled[desktop_guest])"
                 };

      "firewall_zones[im]"
        slist => {
                    "@(firewall_zones[desktop_guest])"
                 };

      "firewall_bridges[im]"
        slist => {
                    "@(firewall_bridges[desktop_guest])"
                 };

      "firewall[im]"
        string => "$(firewall[desktop_guest])";

      "network[im]"
        string => "$(network[desktop_guest])";

################################################################################
#                              server_guest
################################################################################

      "make_profile[server_guest]"
        string => "$(make_profile[guest])";

      "pm_env[server_guest]"
        slist => {
                    "@(pm_env[guest])"
                 };

      "pm_environment[server_guest]"
        slist => {
                    "@(pm_environment[guest])"
                 };

      "keywords[server_guest]"
        slist => {
                    "@(keywords[guest])"
                 };

      "mask[server_guest]"
        slist => {
                    "@(mask[guest])"
                 };

      "unmask[server_guest]"
        slist => {
                    "@(unmask[guest])"
                 };

      "use[server_guest]"
        slist => {
                    "@(use[guest])"
                 };

      "profile[server_guest]"
        slist => {
                    "@(profile[guest])"
                 };

      "use_udev[server_guest]"
        slist => {
                    "@(use_udev[guest])"
                 };

      "use_systemd[server_guest]"
        slist => {
                    "@(use_systemd[guest])"
                 };

      "unuse_udev[server_guest]"
        slist => {
                    "@(unuse_udev[guest])"
                 };

      "unuse_systemd[server_guest]"
        slist => {
                    "@(unuse_systemd[guest])"
                 };

      "systemd_enabled[server_guest]"
        slist => {
                    "@(systemd_enabled[guest])"
                 };

      "firewall_zones[server_guest]"
        slist => {
                    "@(firewall_zones[guest])"
                 };

      "firewall_bridges[server_guest]"
        slist => {
                    "@(firewall_bridges[guest])"
                 };

      "firewall[server_guest]"
        string => "$(firewall[guest])";

      "network[server_guest]"
        string => "$(network[guest])";

################################################################################
#                              chroot_server
################################################################################

      "make_profile[chroot_server]"
        string => "cryptoo/chroot";

      "pm_env[chroot_server]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[chroot_server]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[chroot_server]"
        slist => {
                    "@(keywords[server_guest])",
                    "bitcoin",
                    "bitmessage",
                    "btcd",
                    "deluge",
                    "dns",
                    "freenet",
                    "i2p",
                    "java",
                    "mail",
                    "namecoin",
                    "router",
                    "samba",
                    "tor",
                    "vpn",
                    "znc"
                 };

      "mask[chroot_server]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[chroot_server]"
        slist => {
                    "@(unmask[server_guest])",
                    "java"
                 };

      "use[chroot_server]"
        slist => {
                    "@(use[server_guest])",
                    "bitcoin",
                    "bitcoin_wallet",
                    "deluge",
                    "deluge_server",
                    "dns",
                    "freenet",
                    "i2p",
                    "java",
                    "mail",
                    "router",
                    "samba_server",
                    "tor",
                    "vpn",
                    "znc"
                 };

      "profile[chroot_server]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[chroot_server]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[chroot_server]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[chroot_server]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[chroot_server]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[chroot_server]"
        slist => {
                    "@(systemd_enabled[server_guest])"
                 };

      "firewall_zones[chroot_server]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[chroot_server]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[chroot_server]"
        string => "$(firewall[server_guest])";

      "network[chroot_server]"
        string => "$(network[server_guest])";

################################################################################
#                             firewall_external
################################################################################

      "make_profile[firewall_external]"
        string => "$(make_profile[server_guest])";

      "pm_env[firewall_external]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[firewall_external]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[firewall_external]"
        slist => {
                    "@(keywords[server_guest])",
                    "router"
                 };

      "mask[firewall_external]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[firewall_external]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[firewall_external]"
        slist => {
                    "@(use[server_guest])",
                    "router"
                 };

      "profile[firewall_external]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[firewall_external]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[firewall_external]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[firewall_external]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[firewall_external]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[firewall_external]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "noip.service"
                 };

      "firewall_zones[firewall_external]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[firewall_external]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[firewall_external]"
        string => '
          {
            "policy":
                 [
                   { "source": "idmz", "destination": "net", "policy": "ACCEPT", "log_level": "" },
                   { "source": "net", "destination": "fw", "policy": "DROP", "log_level": "" }
                 ],
               }
          }
        ';

      "network[firewall_external]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "dhcp",
                     "params":
                       {
                         "zone": "wan",
                         "ipforward": "ipv4"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "ispdmz",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "vpn_primary",
                             "eep": "vpn_primary",
                             "tor": "vpn_primary",
                             "i2p": "vpn_primary",
                             "vpndmz": "vpn_primary",
                             "lan": "vpn_primary"
                           }
                       }
                   }
               }
          }
        ';

################################################################################
#                             tor
################################################################################

      "make_profile[tor]"
        string => "$(make_profile[server_guest])";

      "pm_env[tor]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[tor]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[tor]"
        slist => {
                    "@(keywords[server_guest])",
                    "tor"
                 };

      "mask[tor]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[tor]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[tor]"
        slist => {
                    "@(use[server_guest])",
                    "tor"
                 };

      "profile[tor]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[tor]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[tor]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[tor]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[tor]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[tor]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "tor"
                 };

      "firewall_zones[tor]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[tor]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[tor]"
        string => "$(firewall[server_guest])";

      "network[tor]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "false"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "tor",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "eep": "firewall_internal",
                             "i2p": "firewall_internal",
                             "vpndmz": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

################################################################################
#                             vpn_primary
################################################################################

      "make_profile[vpn_primary]"
        string => "$(make_profile[server_guest])";

      "pm_env[vpn_primary]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[vpn_primary]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[vpn_primary]"
        slist => {
                    "@(keywords[server_guest])",
                    "router"
                 };

      "mask[vpn_primary]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[vpn_primary]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[vpn_primary]"
        slist => {
                    "@(use[server_guest])",
                    "router"
                 };

      "profile[vpn_primary]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[vpn_primary]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[vpn_primary]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[vpn_primary]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[vpn_primary]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[vpn_primary]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "openvpn@primary.service"
                 };

      "firewall_zones[vpn_primary]"
        slist => {
                    "@(firewall_zones[server_guest])",
                    "vpn"
                 };

      "firewall_bridges[vpn_primary]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[vpn_primary]"
        string => '
          {
            "policy":
                 [
                   { "source": "vdmz", "destination": "vpn", "policy": "ACCEPT", "log_level": "" },
                   { "source": "vdmz", "destination": "net", "policy": "DROP", "log_level": "" },
                   { "source": "lan", "destination": "vpn", "policy": "ACCEPT", "log_level": "" },
                   { "source": "lan", "destination": "net", "policy": "DROP", "log_level": "" },
                   { "source": "vpn", "destination": "fw", "policy": "DROP", "log_level": "" }
                 ],
               }
          }
        ';

      "network[vpn_primary]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "backup_dns": "firewall_external"
                           }
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "vpndmz",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   },
                 "openvpn":
                   {
                     "type": "virtual",
                     "params":
                       {
                         "zone": "vpn",
                         "ipforward": "ipv4"
                       }
                   }
               }
          }
        ';

################################################################################
#                             dns
################################################################################

      "make_profile[dns]"
        string => "$(make_profile[server_guest])";

      "pm_env[dns]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[dns]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[dns]"
        slist => {
                    "@(keywords[server_guest])",
                    "dns"
                 };

      "mask[dns]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[dns]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[dns]"
        slist => {
                    "@(use[server_guest])",
                    "dns"
                 };

      "profile[dns]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[dns]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[dns]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[dns]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[dns]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[dns]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "dnsmasq"
                 };

      "firewall_zones[dns]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[dns]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[dns]"
        string => "$(firewall[server_guest])";

      "network[dns]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "vpndmz",
                         "gateway": "vpn_primary",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

################################################################################
#                             mail_server
################################################################################

      "make_profile[mail_server]"
        string => "$(make_profile[server_guest])";

      "pm_env[mail_server]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[mail_server]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[mail_server]"
        slist => {
                    "@(keywords[server_guest])",
                    "mail_server"
                 };

      "mask[mail_server]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[mail_server]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[mail_server]"
        slist => {
                    "@(use[server_guest])",
                    "mail_server"
                 };

      "profile[mail_server]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[mail_server]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[mail_server]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[mail_server]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[mail_server]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[mail_server]"
        slist => {
                    "@(systemd_enabled[server_guest])",
                    "dovecot.service",
                    "fetchmail.service",
                    "postfix.service"
                 };

      "firewall_zones[mail_server]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[mail_server]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[mail_server]"
        string => "$(firewall[server_guest])";

      "network[mail_server]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "vpndmz",
                         "gateway": "vpn_primary",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "lan": "firewall_internal"
                           }
                       }
                   }
               }
          }
        ';

################################################################################
#                              firewall_internal
################################################################################

      "make_profile[firewall_internal]"
        string => "$(make_profile[server_guest])";

      "pm_env[firewall_internal]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[firewall_internal]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[firewall_internal]"
        slist => {
                    "@(keywords[server_guest])"
                 };

      "mask[firewall_internal]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[firewall_internal]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[firewall_internal]"
        slist => {
                    "@(use[server_guest])"
                 };

      "profile[firewall_internal]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[firewall_internal]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[firewall_internal]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[firewall_internal]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[firewall_internal]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[firewall_internal]"
        slist => {
                    "@(systemd_enabled[server_guest])"
                 };

      "firewall_zones[firewall_internal]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[firewall_internal]"
        slist => {
                    "@(firewall_bridges[server_guest])"
                 };

      "firewall[firewall_internal]"
        string => '
          {
            "policy":
                 [
                   { "source": "lan", "destination": "net", "policy": "ACCEPT", "log_level": "" },
                   { "source": "lan", "destination": "onion", "policy": "ACCEPT", "log_level": "" },
                   { "source": "lan", "destination": "eep", "policy": "ACCEPT", "log_level": "" },
                   { "source": "vdmz", "destination": "onion", "policy": "ACCEPT", "log_level": "" },
                   { "source": "vdmz", "destination": "eep", "policy": "ACCEPT", "log_level": "" }
                 ],
               }
          }
        ';

      "network[firewall_internal]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "none"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "none"
                   ]
               },
             "interfaces":
               {
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "vpndmz",
                         "gateway": "vpn_primary",
                         "ipforward": "ipv4"
                       }
                   },
                 "eth1":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "tor",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "onion": "tor"
                           }
                       }
                   },
                 "eth2":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "i2p",
                         "ipforward": "ipv4",
                         "routes":
                           {
                             "eep": "i2p"
                           }
                       }
                   },
                 "eth3":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "lan",
                         "ipforward": "ipv4"
                       }
                   }
               }
          }
        ';

################################################################################
#                              vpn_server
################################################################################

      "make_profile[vpn_server]"
        string => "$(make_profile[server_guest])";

      "pm_env[vpn_server]"
        slist => {
                    "@(pm_env[server_guest])"
                 };

      "pm_environment[vpn_server]"
        slist => {
                    "@(pm_environment[server_guest])"
                 };

      "keywords[vpn_server]"
        slist => {
                    "@(keywords[server_guest])",
                    "vpn"
                 };

      "mask[vpn_server]"
        slist => {
                    "@(mask[server_guest])"
                 };

      "unmask[vpn_server]"
        slist => {
                    "@(unmask[server_guest])"
                 };

      "use[vpn_server]"
        slist => {
                    "@(use[server_guest])",
                    "vpn"
                 };

      "profile[vpn_server]"
        slist => {
                    "@(profile[server_guest])"
                 };

      "use_udev[vpn_server]"
        slist => {
                    "@(use_udev[server_guest])"
                 };

      "use_systemd[vpn_server]"
        slist => {
                    "@(use_systemd[server_guest])"
                 };

      "unuse_udev[vpn_server]"
        slist => {
                    "@(unuse_udev[server_guest])"
                 };

      "unuse_systemd[vpn_server]"
        slist => {
                    "@(unuse_systemd[server_guest])"
                 };

      "systemd_enabled[vpn_server]"
        slist => {
                    "@(systemd_enabled[server_guest])"
                 };

      "firewall_zones[vpn_server]"
        slist => {
                    "@(firewall_zones[server_guest])"
                 };

      "firewall_bridges[vpn_server]"
        slist => {
                    "@(firewall_bridges[server_guest])",
                    "lan_bridge_vpn"
                 };

      "firewall[vpn_server]"
        string => '
          {
            "policy":
                 [
                   { "source": "l13", "destination": "l0", "policy": "ACCEPT", "log_level": "" }
                 ],
               }
          }
        ';

      "network[vpn_server]"
        string => '
          {
            "devices":
               {
                 "bridge":
                   [
                     "lan"
                   ],
                 "veth":
                   [
                     "none"
                   ],
                 "tap":
                   [
                     "openvpn1",
                     "openvpn2",
                     "openvpn3",
                     "openvpn4"
                   ]
               },
             "interfaces":
               {
                 "openvpn_bridge_udp":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "openvpn1"
                       }
                   },
                 "openvpn_bridge_tcp":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "openvpn2"
                       }
                   },
                 "openvpn_route_udp":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "openvpn3"
                       }
                   },
                 "openvpn_route_tcp":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "openvpn4"
                       }
                   },
                 "lan_bridge":
                   {
                     "type": "no_address",
                     "params":
                       {
                         "device": "lan"
                       }
                   },
                 "veth_pair":
                   {
                     "type": "bridge_member",
                     "params":
                       {
                         "bridge": "lan"
                       }
                   },
                 "lan_physical":
                   {
                     "type": "physical",
                     "params":
                       {
                         "bridge": "lan",
                         "device": "eth1"
                       }
                   },
                 "lantap":
                   {
                     "type": "simple",
                     "params":
                       {
                         "zone": "lan",
                         "ipforward": "false",
                         "routes":
                           {
                             "onion": "firewall_internal",
                             "eep": "firewall_internal",
                             "tor": "firewall_internal",
                             "i2p": "firewall_internal",
                             "vpndmz": "firewall_internal"
                           }
                       }
                   },
                 "eth0":
                   {
                     "type": "gateway",
                     "params":
                       {
                         "zone": "ispdmz",
                         "gateway": "firewall_external",
                         "ipforward": "false"
                       }
                   }
               }
          }
        ';

}
