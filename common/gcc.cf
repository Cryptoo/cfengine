body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf"
            };

}

bundle agent gcc(root, arch)

{
  vars:

    any::

      "native_gcc_profiles"
        slist => findfiles("/$(directory_names.fs_config_gcc_environment)/$(arch)-pc-linux-gnu-*");

      "native_gcc_profiles_sorted"
        slist => sort("native_gcc_profiles", "lex");

      "native_gcc_profiles_sorted_reverse"
        slist => reverse("native_gcc_profiles_sorted");

      "native_gcc_profile_best_path"
        string => nth("native_gcc_profiles_sorted_reverse", 0);

    native_gcc_profile_best::

      "gcc[CURRENT]"
        string => "$(native_gcc_profile_best[2])";

  classes:

    any::

      "have_gcc"
        expression => fileexists("$(root)$(file_names.env_gcc_$(arch))");

      "native_gcc_profile_best"
        expression => regextract("(/$(directory_names.fs_config_gcc_environment)/)(.*)", "$(native_gcc_profile_best_path)", "native_gcc_profile_best");

  files:

    have_gcc&native_gcc_profile_best::

      "$(root)$(file_names.env_gcc_native)"
        move_obstructions => "true",
        link_from => gcc_profile("$(native_gcc_profile_best_path)"),
        classes => default:u_if_repaired("update_env");

      "$(root)$(file_names.env_gcc_$(arch))"
        move_obstructions => "true",
        edit_line => default:set_variable_values("cryptoo:gcc.gcc"),
        classes => default:u_if_repaired("update_env");

}