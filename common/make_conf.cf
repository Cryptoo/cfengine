body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/file_names.cf",
              "cryptoo/config/role.cf",
              "cryptoo/config/site.cf",
              "cryptoo/config/templates.cf"
            };

}

bundle agent make_conf(root, role, multilib)

{

  vars:

    any::

      "params"
        string => "$(role.params[$(this.role)])";

      "params_data"
        data => parsejson("$(this.params)");

    have_cpu2use_app&(!broken_cpu2use)::

      "cpu_flags" string => execresult("/$(cryptoo:file_names.cpu2use_app)","noshell");

    (!have_cpu2use_app)|(broken_cpu2use)::

      "cpu_flags" string => "CPU_FLAGS_X86=\"\"";

  classes:

    any::

      "have_cpu2use_app"
        expression => fileexists("/$(cryptoo:file_names.cpu2use_app)");

      "have_layman_conf"
        expression => fileexists("$(root)$(cryptoo:file_names.overlay_conf)");

      "make_conf_$(multilib)"
        expression => "any";

      "makeopts_$(params_data[make_conf][makeopts])"
        expression => "any";

      "pkgdir_$(params_data[make_conf][pkgdir])"
        expression => "any";

      "runtime_$(params_data[make_conf][runtime])"
        expression => "any";

      "make_conf_$(params_data[make_conf][graphical])"
        expression => "any";

    have_cpu2use_app::

      "broken_cpu2use"
        expression => regextract(".*Traceback.*", "$(cpu_flags)", "broken_cpu2use");

  files:

    !broken_cpu2use::

      "$(root)$(cryptoo:file_names.pm_config)"
        perms => system,
        create => "true",
        edit_template => "/$(cryptoo:templates.template[make_conf])";

    broken_cpu2use::

      "$(root)$(cryptoo:file_names.pm_config)"
        delete => default:tidy;

}
