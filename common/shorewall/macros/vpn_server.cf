body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent shorewall_macro_vpn_server(root)

{

  meta:

    "tags" slist => { "shorewall_macro", "firewall_external", "vpn_server" };

  vars:

    any::

      "macro_name"
        string => "vpn_server";

      "macro_json"
        string => '
          {
            "name": "$(this.macro_name)",
            "default": "ACCEPT",
            "rules":
                 [
                   {
                     "action": "OpenVPN(PARAM)",
                     "source": "-",
                     "destination": "-",
                     "protocol": "",
                     "destination_port": "",
                     "source_port": ""
                   },
                   {
                     "action": "PARAM",
                     "source": "-",
                     "destination": "-",
                     "protocol": "tcp",
                     "destination_port": "1194",
                     "source_port": ""
                   },
                   {
                     "action": "PARAM",
                     "source": "-",
                     "destination": "-",
                     "protocol": "udp",
                     "destination_port": "1195",
                     "source_port": ""
                   },
                   {
                     "action": "PARAM",
                     "source": "-",
                     "destination": "-",
                     "protocol": "tcp",
                     "destination_port": "1195",
                     "source_port": ""
                   }
                 ],
               }
          }
        ';

  files:

    any::

      "$(root)$(directory_names.fs_config_shorewall)/macro.$(this.macro_name)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[shorewall_macro])",
        template_method => "mustache",
        template_data => parsejson("$(macro_json)");

}
