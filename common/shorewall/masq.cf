body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/file_names.cf",
              "cryptoo/config/network.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/classes.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent shorewall_masq(root, role)

{

  vars:

    any::

      "defined_numbers"
        data => mergedata("cryptoo:config.defined_numbers");

      "subnet_config"
        data => mergedata("cryptoo:network.subnet_config");

    !have_masq::

      "masq_json"
        string => '{ "masq": [ ] }';

    masq_firewall_external::

      "masq_json"
        string => '
          {
            "masq":
              [
                {
                  "interface": "eth0:!+private",
                  "source": "192.168.$(subnet_config[ispdmz]).0/24",
                  "address": "",
                  "protocol": "",
                  "port": ""
                },
                {
                  "interface": "eth1",
                  "source": "-",
                  "address": "192.168.$(subnet_config[ispdmz]).$(defined_numbers[firewall_external])",
                  "protocol": "tcp",
                  "port": "22"
                },
                {
                  "interface": "eth1",
                  "source": "-",
                  "address": "192.168.$(subnet_config[ispdmz]).$(defined_numbers[firewall_external])",
                  "protocol": "tcp",
                  "port": "1194:1195"
                },
                {
                  "interface": "eth1",
                  "source": "-",
                  "address": "192.168.$(subnet_config[ispdmz]).$(defined_numbers[firewall_external])",
                  "protocol": "udp",
                  "port": "1194:1195"
                }
              ]
          }';

    masq_vpn_primary::

      "masq_json"
        string => '
          {
            "masq":
              [
                {
                  "interface": "openvpn:!+private",
                  "source": "192.168.$(subnet_config[vpndmz]).0/24",
                  "address": "",
                  "protocol": "",
                  "port": ""
                },
                {
                  "interface": "openvpn:!+private",
                  "source": "192.168.$(subnet_config[lan]).0/24",
                  "address": "",
                  "protocol": "",
                  "port": ""
                }
              ]
          }';

    masq_vpn_secondary::

      "masq_json"
        string => '
          {
            "masq":
              [
                {
                  "interface": "openvpn:!+private",
                  "source": "192.168.$(subnet_config[vpndmz]).0/24",
                  "address": "",
                  "protocol": "",
                  "port": ""
                },
                {
                  "interface": "eth1",
                  "source": "-",
                  "address": "192.168.$(subnet_config[vpndmz]).$(defined_numbers[vpn_secondary])",
                  "protocol": "tcp",
                  "port": "22"
                }
              ]
          }';

    masq_vpn_server::

      "masq_json"
        string => '
          {
            "masq":
              [
                {
                  "interface": "lantap",
                  "source": "192.168.$(subnet_config[lan]).0/24"
                }
              ]
          }';

    masq_tor::

      "masq_json"
        string => '
          {
            "masq":
              [
                {
                  "interface": "eth1",
                  "source": "192.168.$(subnet_config[ispdmz]).$(defined_numbers[tor])",
                  "address": "192.168.$(subnet_config[tor]).$(defined_numbers[tor])"
                }
              ]
          }';

  classes:

    second::

      "json_ready"
        expression => "any";

    masq_firewall_external|masq_vpn_primary|masq_vpn_secondary|masq_vpn_server|masq_tor::

      "have_masq"
        expression => "any";

    any::

      "masq_$(this.role)"
        expression => "any";

      "second"
        expression => "any";

  files:

    json_ready::

      "$(root)$(file_names.shorewall_masq)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[shorewall_masq])",
        template_method => "mustache",
        template_data => parsejson("$(masq_json)"),
        classes => shorewall;

}
