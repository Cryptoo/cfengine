body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/config.cf",
              "cryptoo/config/file_groups.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/network.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/perms.cf",
              "@(cryptoo:control.systemd_proto_inputs)"
            };

}

bundle agent networkd(root, role)

{

  vars:

    any::

      "$(this.role)_config"
        data => parsejson("$(file_groups.network[$(this.role)])");

      "bridge_list"
        slist => getvalues("$(this.role)_config[devices][bridge]");

      "veth_list"
        slist => getvalues("$(this.role)_config[devices][veth]");

      "tap_list"
        slist => getvalues("$(this.role)_config[devices][tap]");

      "role_number"
        string => "$(config.defined_numbers[$(this.role)])";

      "ispdmz_subnet"
        string => "$(network.subnet_config[ispdmz])";

      "onion_subnet"
        string => "$(config.transparent_proxy_net[tor])";

      "eep_subnet"
        string => "$(config.transparent_proxy_net[i2p])";

      "tor_subnet"
        string => "$(network.subnet_config[tor])";

      "i2p_subnet"
        string => "$(network.subnet_config[i2p])";

      "vpndmz_subnet"
        string => "$(network.subnet_config[vpndmz])";

      "lan_subnet"
        string => "$(network.subnet_config[lan])";

      "network_wan_bridge"
          string => '
            {
              "sections":
                 [
                   { "section": "Match",
                     "values":
                       [
                         { "LHS": "Name", "RHS": "wan" }
                       ]
                   },
                   { "section": "Network",
                     "values":
                       [
                         { "LHS": "DHCP", "RHS": "false" },
                         { "LHS": "LinkLocalAddressing", "RHS": "No"}
                       ]
                   }
                 ]
            }
          ';

        "network_wan_physical"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "$(site.config[host_network][wan_physical])" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "wan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_wan_gateway"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth0" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "true" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_ispdmz_gateway"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth1" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.ispdmz_subnet).$(this.role_number)/24" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "Destination", "RHS": "$(this.onion_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "Destination", "RHS": "$(this.eep_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.tor_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.i2p_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.vpndmz_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.lan_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_ispdmz"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth0" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.ispdmz_subnet).$(this.role_number)/24" },
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[firewall_external])" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_ispdmz_bridge"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "ispdmz" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_ispdmz_gateway_internal"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth0" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.ispdmz_subnet).$(this.role_number)/24" },
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[firewall_external])" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.ispdmz_subnet).$(config.defined_numbers[firewall_external])" },
                       { "LHS": "Destination", "RHS": "$(config.dns[backup])" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_vpndmz"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth0" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.vpndmz_subnet).$(this.role_number)/24" },
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "$(this.onion_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "$(this.eep_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.tor_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.i2p_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.lan_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_vpndmz_bridge"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "vpndmz" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_vpndmz_gateway_internal"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth1" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.vpndmz_subnet).$(this.role_number)/24" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "$(this.onion_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "$(this.eep_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.tor_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.i2p_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.lan_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_vpndmz_gateway_lan"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth0" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.vpndmz_subnet).$(this.role_number)/24" },
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.vpndmz_subnet).$(config.defined_numbers[vpn_primary])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.ispdmz_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_tor_bridge"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "tor" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_tor_gateway"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth1" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.tor_subnet).$(this.role_number)/24" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.tor_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "$(this.eep_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.tor_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.i2p_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.tor_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.vpndmz_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.tor_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "Destination", "RHS": "192.168.$(this.lan_subnet).0/24" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_tor_gateway_lan"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth1" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.tor_subnet).$(this.role_number)/24" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.tor_subnet).$(config.defined_numbers[tor])" },
                       { "LHS": "Destination", "RHS": "$(this.onion_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_i2p_bridge"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "i2p" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_i2p_gateway_lan"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth2" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.i2p_subnet).$(this.role_number)/24" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 },
                 { "section": "Route",
                   "values":
                     [
                       { "LHS": "Gateway", "RHS": "192.168.$(this.i2p_subnet).$(config.defined_numbers[i2p])" },
                       { "LHS": "Destination", "RHS": "$(this.eep_subnet)" },
                       { "LHS": "Metric", "RHS": "0" }
                     ]
                 }
               ]
          }
        ';

      "network_lan_bridge"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "lan" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_physical"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "$(site.config[host_network][lan_physical])" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_gateway"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth3" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.lan_subnet).$(this.role_number)/24" },
                       { "LHS": "IPForward", "RHS": "ipv4" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_lan0"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "eth1" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_lan1"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "lan1" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_lan13"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "lan13" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_lantap"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "lantap" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.lan_subnet).$(this.role_number)/24" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_lantap_host"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "lantap" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Address", "RHS": "192.168.$(this.lan_subnet).$(this.role_number)/24" },
                       { "LHS": "Gateway", "RHS": "192.168.$(this.lan_subnet).$(config.defined_numbers[firewall_internal])" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_openvpn1"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "openvpn1" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_openvpn2"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "openvpn2" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_openvpn3"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "openvpn3" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

      "network_lan_openvpn4"
        string => '
          {
            "sections":
               [
                 { "section": "Match",
                   "values":
                     [
                       { "LHS": "Name", "RHS": "openvpn4" }
                     ]
                 },
                 { "section": "Network",
                   "values":
                     [
                       { "LHS": "DHCP", "RHS": "false" },
                       { "LHS": "Bridge", "RHS": "lan" },
                       { "LHS": "LinkLocalAddressing", "RHS": "No"}
                     ]
                 }
               ]
          }
        ';

  classes:

    have_devices::

      "networkd_$(this.role)"
        expression => "any";

  files:

    networkd_master::

      "$(this.root)$(file_names.i2p_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_bridge[i2p]));

      "$(this.root)$(file_names.ispdmz_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_bridge[ispdmz]));

      "$(this.root)$(file_names.lan_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_bridge[lan]));

      "$(this.root)$(file_names.lantap_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_veth[lantap]));

      "$(this.root)$(file_names.tor_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_bridge[tor]));

      "$(this.root)$(file_names.vpndmz_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_bridge[vpndmz]));

      "$(this.root)$(file_names.wan_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_bridge[wan]));

      "$(this.root)$(file_names.wan_bridge_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_wan_bridge));

      "$(this.root)$(file_names.wan_physical_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_wan_physical));

      "$(this.root)$(file_names.ispdmz_bridge_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_ispdmz_bridge));

      "$(this.root)$(file_names.vpndmz_bridge_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_vpndmz_bridge));

      "$(this.root)$(file_names.tor_bridge_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_tor_bridge));

      "$(this.root)$(file_names.i2p_bridge_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_i2p_bridge));

      "$(this.root)$(file_names.lan_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_lantap_host));

      "$(this.root)$(file_names.lan1_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_lan1));

      "$(this.root)$(file_names.lan_bridge_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_bridge));

      "$(this.root)$(file_names.lan_physical_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_physical));

    networkd_firewall_external::

      "$(this.root)$(file_names.wan_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_wan_gateway));

      "$(this.root)$(file_names.ispdmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_ispdmz_gateway));

    networkd_tor::

      "$(this.root)$(file_names.ispdmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_ispdmz));

      "$(this.root)$(file_names.tor_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_tor_gateway));

    networkd_vpn_primary::

      "$(this.root)$(file_names.ispdmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_ispdmz_gateway_internal));

      "$(this.root)$(file_names.vpndmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_vpndmz_gateway_internal));

    networkd_dns::

      "$(this.root)$(file_names.vpndmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_vpndmz));

    networkd_mail_server::

      "$(this.root)$(file_names.vpndmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_vpndmz));

    networkd_firewall_internal::

      "$(this.root)$(file_names.vpndmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_vpndmz_gateway_lan));

      "$(this.root)$(file_names.tor_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_tor_gateway_lan));

      "$(this.root)$(file_names.i2p_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_i2p_gateway_lan));

      "$(this.root)$(file_names.lan_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_gateway));

    networkd_vpn_server::

      "$(this.root)$(file_names.lan_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_bridge[lan]));

      "$(this.root)$(file_names.lantap_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_veth[lantap]));

      "$(this.root)$(file_names.openvpn1_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_tap[openvpn1]));

      "$(this.root)$(file_names.openvpn2_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_tap[openvpn2]));

      "$(this.root)$(file_names.openvpn3_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_tap[openvpn3]));

      "$(this.root)$(file_names.openvpn4_netdev)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(netdev_tap[openvpn4]));

      "$(this.root)$(file_names.ispdmz_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_ispdmz));

      "$(this.root)$(file_names.lan_bridge_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_bridge));

      "$(this.root)$(file_names.lan_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_lantap));

      "$(this.root)$(file_names.lan0_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_lan0));

      "$(this.root)$(file_names.lan13_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_lan13));

      "$(this.root)$(file_names.openvpn1_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_openvpn1));

      "$(this.root)$(file_names.openvpn2_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_openvpn2));

      "$(this.root)$(file_names.openvpn3_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_openvpn3));

      "$(this.root)$(file_names.openvpn4_network)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.network_lan_openvpn4));

  methods:

    any::

      "construct json for bridge devices"
        usebundle => netdev_bridge("$(bridge_list)"),
        useresult => "netdev_bridge",
        handle => "have_bridges";

      "construct json for veth devices"
        usebundle => netdev_veth("$(veth_list)", "$(this.role_number)"),
        useresult => "netdev_veth",
        depends_on => { "have_bridges" },
        handle => "have_veth";

      "construct json for tap devices"
        usebundle => netdev_tap("$(tap_list)", "openvpn", "openvpn"),
        useresult => "netdev_tap",
        depends_on => { "have_veth" },
        classes => default:if_ok("have_devices");

}
