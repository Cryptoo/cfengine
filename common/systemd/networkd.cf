body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/config.cf",
              "cryptoo/config/file_groups.cf",
              "@(cryptoo:control.systemd_proto_inputs)"
            };

}

bundle agent networkd(root, role)

{

  vars:

    any::

      "$(this.role)_config"
        data => parsejson("$(file_groups.network[$(this.role)])");

      "bridge_list"
        slist => getvalues("$(this.role)_config[devices][bridge]");

      "veth_list"
        slist => getvalues("$(this.role)_config[devices][veth]");

      "tap_list"
        slist => getvalues("$(this.role)_config[devices][tap]");

      "interface_list"
        slist => getindices("$(this.role)_config[interfaces]");

      "interface[$(interface_list)][type]"
        string => "$($(this.role)_config[interfaces][$(interface_list)][type])";

      "interface[$(interface_list)][params]"
        string => storejson("$(this.role)_config[interfaces][$(interface_list)][params]");

      "role_number"
        string => "$(config.defined_numbers[$(this.role)])";

  methods:

    any::

      "manage .netdev files for bridge devices"
        usebundle => netdev_bridge("$(this.root)", "$(bridge_list)");

      "manage .netdev files for veth devices"
        usebundle => netdev_veth("$(this.root)", "$(veth_list)", "$(this.role_number)");

      "manage .netdev files for tap devices"
        usebundle => netdev_tap("$(this.root)", "$(tap_list)", "openvpn", "openvpn");

      "manage .network files"
        usebundle => network_file("$(this.root)", "$(interface_list)", "$(this.role_number)", "$(interface[$(interface_list)][type])", "$(interface[$(interface_list)][params])");

}
