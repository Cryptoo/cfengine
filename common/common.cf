body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/common/gcc.cf",
              "cryptoo/common/portage.cf",
              "cryptoo/common/shorewall.cf",
              "cryptoo/common/ssh.cf",
              "cryptoo/common/unix_extra_groups.cf",
              "cryptoo/common/unix_group.cf",
              "cryptoo/common/unix_user.cf",
              "cryptoo/config/config.cf",
              "cryptoo/config/directory_groups.cf",
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/site.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/roles/guest/chroot.cf",
              "cryptoo/util/contain.cf",
              "cryptoo/util/edit_line.cf",
              "cryptoo/util/link_from.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent cryptoo_filesystem(root, role, arch, multilib)

{

  vars:

    any::

      "groups"
        slist => getindices("config.gid");

      "users"
        slist => getindices("config.users");

      "extra_groups"
        slist => getindices("config.extra_groups");

  classes:

    any::

      "local_role_$(role)"
        expression => "any";

      "$(arch)"
        expression => "any";

      "have_locale_gen"
        expression => fileexists("$(root)$(file_names.locale)");

      "have_envupdate_app"
        expression => fileexists("$(root)$(file_names.envupdate_app)");

      "have_localegen_app"
        expression => fileexists("$(root)$(file_names.localegen_app)");

    local_role_chroot_desktop|local_role_chroot_server::

      "chroot"
        expression => "any";

  files:

    any::

      "$(root)/."
        perms => system,
        create => "true",
        handle => "$(root)";

      "$(root)$(directory_groups.common_system)/."
        perms => system,
        create => "true",
        handle => "$(root)$(directory_groups.common_system)";

      "$(root)$(directory_groups.common_system_restricted)/."
        perms => restricted,
        create => "true",
        handle => "$(root)$(directory_groups.common_system_restricted)";

      "$(root)$(directory_groups.common_system_private)/."
        perms => root,
        create => "true",
        handle => "$(root)$(directory_groups.common_system_private)";

      "$(root)$(directory_groups.common_open)/."
        perms => system_tmp,
        create => "true",
        handle => "$(root)$(directory_groups.common_open)";

      "$(root)$(directory_names.fs_mount_shared)/."
        depends_on => { "users_ok" },
        perms => guest,
        create => "true",
        handle => "$(root)$(directory_names.fs_mount_shared)";

      "$(root)$(file_names.mtab)"
        move_obstructions => "true",
        link_from => proc_mounts;

      "$(root)$(file_names.networks)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[networks])";

      "$(root)$(directory_names.fs_standard_kernel)"
        move_obstructions => "true",
        link_from => kernel_dir;

      "$(root)$(file_names.localtime)"
        move_obstructions => "true",
        link_from => timezone("$(site.config[timezone])");

      "$(root)$(file_names.system_bashrc)"
        perms => system,
        create => "false",
        ifvarclass => fileexists("$(root)$(file_names.system_bashrc)"),
        edit_line => bashrc;

      "$(root)$(file_names.system_bash_logout)"
        perms => system,
        create => "false",
        ifvarclass => fileexists("$(root)$(file_names.system_bash_logout)"),
        edit_line => default:uncomment_lines_matching("clear","#");

      "$(root)$(file_names.env_cryptoo)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[env_cryptoo])",
        classes => default:if_repaired("update_env");

      "$(root)$(file_names.env_locale)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[env_locale])",
        classes => default:if_repaired("update_env");

    have_locale_gen::

      "$(root)$(file_names.locale)"
        perms => system,
        create => "false",
        edit_line => default:uncomment_lines_containing("$(cryptoo:site.config[locale])","#"),
        classes => default:if_repaired("update_locale");

  methods:

    any::

      "configure gcc profile"
        usebundle => gcc("$(root)", "$(arch)");

      "configure portage"
        usebundle => portage("$(root)", "$(role)", "$(arch)", "$(multilib)");

      "set up groups"
        usebundle => unix_group("$(root)", "$(groups)");

      "set up users"
        usebundle => unix_user("$(root)", "$(users)"),
        classes => default:if_ok("users_ok");

      "set up additional group memberships"
        usebundle => unix_extra_groups("$(root)", "$(extra_groups)");

      "set up ssh"
        usebundle => ssh($(root), $(role));

      "set up shorewall"
        usebundle => shorewall($(this.root), $(this.role));

    chroot::

      "manage chroot files"
        usebundle => chroot_files("$(root)", "$(role)");

  commands:

    update_locale&have_localegen_app::

      "/$(file_names.localegen_app)"
        contain => basic_chroot($(root));

    update_env&have_envupdate_app::

      "/$(file_names.envupdate_app)"
        contain => basic_chroot($(root));

}
