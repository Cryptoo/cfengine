body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/common/gcc.cf",
              "cryptoo/common/portage.cf",
              "cryptoo/common/unix_group.cf",
              "cryptoo/guest/template/files.cf",
              "cryptoo/util/contain.cf",
              "cryptoo/util/edit_line.cf",
              "cryptoo/util/link_from.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent cryptoo_filesystem(root, role, arch, multilib)

{

  vars:

    any::

      "groups"
        slist => getindices("cryptoo:config.gid");

  classes:

    any::

      "local_role_$(role)"
        expression => "any";

      "$(arch)"
        expression => "any";

      "have_locale_gen"
        expression => fileexists("$(root)$(file_names.locale)");

      "have_envupdate_app"
        expression => fileexists("$(root)$(file_names.envupdate_app)");

      "have_localegen_app"
        expression => fileexists("$(root)$(file_names.localegen_app)");

    local_role_template_desktop|local_role_template_server::

      "template"
        expression => "any";

  files:

    any::

      "$(root)/."
        perms => system,
        create => "true",
        handle => "$(root)";

      "$(root)$(directory_groups.common_system)/."
        perms => system,
        create => "true",
        handle => "$(root)$(directory_groups.common_system)";

      "$(root)$(directory_groups.common_system_restricted)/."
        perms => restricted,
        create => "true",
        handle => "$(root)$(directory_groups.common_system_restricted)";

      "$(root)$(directory_groups.common_system_private)/."
        perms => root,
        create => "true",
        handle => "$(root)$(directory_groups.common_system_private)";

      "$(root)$(directory_groups.common_open)/."
        perms => system_tmp,
        create => "true",
        handle => "$(root)$(directory_groups.common_open)";

      "$(root)$(directory_names.fs_mount_shared)/."
        depends_on => { "user_guest" },
        perms => guest,
        create => "true",
        handle => "$(root)$(directory_names.fs_mount_shared)";

      "$(root)$(file_names.mtab)"
        move_obstructions => "true",
        link_from => proc_mounts;

      "$(root)$(directory_names.fs_standard_kernel)"
        move_obstructions => "true",
        link_from => kernel_dir;

      "$(root)$(file_names.localtime)"
        move_obstructions => "true",
        link_from => timezone("$(cryptoo:cryptoo.site_config[timezone])");

      "$(root)$(file_names.system_bashrc)"
        perms => system,
        create => "false",
        ifvarclass => fileexists("$(root)$(file_names.system_bashrc)"),
        edit_line => bashrc;

      "$(root)$(file_names.system_bash_logout)"
        perms => system,
        create => "false",
        ifvarclass => fileexists("$(root)$(file_names.system_bash_logout)"),
        edit_line => default:uncomment_lines_containing("clear","#");

      "$(root)$(file_names.env_cryptoo)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[env_cryptoo])",
        classes => default:u_if_repaired("update_env");

      "$(root)$(file_names.env_locale)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[env_locale])",
        classes => default:u_if_repaired("update_env");

    have_locale_gen::

      "$(root)$(file_names.locale)"
        perms => system,
        create => "false",
        edit_line => default:uncomment_lines_containing("$(cryptoo:cryptoo.site_config[locale])","#"),
        classes => default:u_if_repaired("update_locale");

  methods:

    any::

      "configure gcc profile"
        usebundle => cryptoo:gcc("$(root)", "$(arch)");

      "configure portage"
        usebundle => cryptoo:portage("$(root)", "$(role)", "$(arch)", "$(multilib)");

      "set up groups"
        usebundle => cryptoo:unix_group("$(root)", "$(groups)");

    template::

      "manage template files"
        usebundle => template_files("$(root)", "$(role)");

  commands:

    update_locale&have_localegen_app::

      "/$(file_names.localegen_app)"
        contain => basic_chroot($(root));

    update_env&have_envupdate_app::

      "/$(file_names.envupdate_app)"
        contain => basic_chroot($(root));

}
