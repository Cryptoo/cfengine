body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/machine.cf",
              "cryptoo/config/site.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent fstab

{

  vars:

    any::

      "chroot"
        data => mergedata("cryptoo:site.config[chroot_guest]");

      "chroot_list"
        slist => getindices("chroot");

      "chroot_mounts[$(chroot_list)][1]"
        string => '{ "source": "/$(directory_names.fs_volatile_overlay)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_volatile_overlay)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][2]"
        string => '{ "source": "/$(directory_names.fs_cryptoo)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_cryptoo)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][3]"
        string => '{ "source": "/$(directory_names.fs_pm)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_pm)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][4]"
        string => '{ "source": "/$(directory_names.fs_site_pm)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_site_pm)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][5]"
        string => '{ "source": "/$(directory_names.fs_site_sources)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_site_sources)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][6]"
        string => '{ "source": "/$(directory_names.fs_dev_base)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_dev_base)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][7]"
        string => '{ "source": "/$(directory_names.fs_proc_base)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_proc_base)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][8]"
        string => '{ "source": "/$(directory_names.fs_sys_base)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_sys_base)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][9]"
        string => '{ "source": "/$(directory_names.fs_site_apps)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_site_apps)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][10]"
        string => '{ "source": "/$(directory_names.fs_site_srcpkg) ", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_site_srcpkg) ", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][11]"
        string => '{ "source": "/$(directory_names.fs_site_binpkg)", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_site_binpkg)", "type": "none", "options": "bind", "dump": "0", "pass": "0", }';

      "chroot_mounts[$(chroot_list)][12]"
        string => '{ "source": "$(chroot[$(chroot_list)][class])_$(chroot[$(chroot_list)][arch])_$(chroot[$(chroot_list)][multilib])_tmp", "target": "/$(directory_names.fs_volatile_images)/$(chroot[$(chroot_list)][class])/$(chroot[$(chroot_list)][arch])/$(chroot[$(chroot_list)][multilib])/$(directory_names.fs_temp_base)", "type": "tmpfs", "options": "size=1G,nosuid,nodev", "dump": "0", "pass": "0", }';

      "chroot_mount_$(chroot_list)_index"
        slist => getindices("chroot_mounts[$(chroot_list)]");

      "chroot_data_$(chroot_list)_$(chroot_mount_$(chroot_list)_index)"
        data => parsejson("$(chroot_mounts[$(chroot_list)][$(chroot_mount_$(chroot_list)_index)])");

      "fstab_json"
        string => '
          {
            "mounts":
               [
                 {
                   "source": "LABEL=$(machine.hostname)-boot",
                   "target": "/$(directory_names.fs_boot_base)",
                   "type": "$(site.config[boot_fs][filesystem])",
                   "options": "$(site.config[boot_fs][options])",
                   "dump": "0",
                   "pass": "2"
                 },
                 {
                   "source": "UUID=$(machine.root_uuid)",
                   "target": "/",
                   "type": "$(site.config[host_fs][filesystem])",
                   "options": "$(site.config[host_fs][options])",
                   "dump": "0",
                   "pass": "1"
                 },
                 {
                   "source": "/dev/mapper/$(machine.hostname)-swap",
                   "target": "none",
                   "type": "swap",
                   "options": "sw",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/dev/mapper/$(machine.hostname)-storage",
                   "target": "/$(directory_names.fs_storage_base)",
                   "type": "$(site.config[host_fs][filesystem])",
                   "options": "$(site.config[host_fs][options])",
                   "dump": "0",
                   "pass": "2"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_apps)",
                   "target": "/usr/site-local/bin",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_cryptoo)",
                   "target": "/$(directory_names.fs_cryptoo)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_home)",
                   "target": "/$(directory_names.fs_home)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_srcpkg)",
                   "target": "/$(directory_names.fs_site_srcpkg)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_overlay)",
                   "target": "/$(directory_names.fs_volatile_overlay)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_binpkg)",
                   "target": "/$(directory_names.fs_site_binpkg)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_pm)",
                   "target": "/$(directory_names.fs_pm)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_pm_site)",
                   "target": "/$(directory_names.fs_site_pm)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_shared) ",
                   "target": "/$(directory_names.fs_mount_shared)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/$(directory_names.fs_storage_sources)",
                   "target": "/$(directory_names.fs_site_sources)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "/",
                   "target": "/$(directory_names.fs_mount_root)",
                   "type": "none",
                   "options": "bind",
                   "dump": "0",
                   "pass": "0"
                 },
                 {
                   "source": "system-tmp",
                   "target": "/$(directory_names.fs_temp_base)",
                   "type": "tmpfs",
                   "options": "size=1G",
                   "dump": "0",
                   "pass": "0"
                 }
               ]
          }
        ';

  files:

    any::

      "/$(file_names.fstab).mustache"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[fstab_mustache])",
        template_method => "mustache",
        template_data => parsejson($(this.fstab_json)),
        comment => "configure /etc/fstab";

  reports:

    any::

#      "$(chroot_mounts[$(chroot_list)][$(chroot_mount_$(chroot_list)_index)])";

}
