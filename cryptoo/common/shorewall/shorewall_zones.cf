body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/common/shorewall/bridge.cf",
              "cryptoo/common/shorewall/bridge_children.cf",
              "cryptoo/common/shorewall/shorewall_interfaces.cf",
              "cryptoo/config/config.cf",
              "cryptoo/config/file_groups.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/classes.cf",
              "cryptoo/util/edit_line.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent shorewall_zones(root, role)

{

  vars:

    any::

      "basic_zones"
        slist => getvalues("file_groups.firewall_zones[$(this.role)]");

      "bridge_zone_list"
        slist => getvalues("file_groups.firewall_bridges[$(this.role)]");

      "network_config_string"
        string => "$(file_groups.network[$(this.role)])";

      "network_config"
        data => parsejson("$(network_config_string)");

      "interface_list"
        slist => getindices("network_config[interfaces]");

    bridge_evaluated::

      "zone4[$(basic_zones)][name]"
        string => '"zone_full": "$(basic_zones)"';

      "zone4[$(basic_zones)][type]"
        string => '"type": "ipv4"';

      "zone_basic_ipv4_json[$(basic_zones)]"
        string => '{ $(zone4[$(basic_zones)][name]), $(zone4[$(basic_zones)][type]) }';

      "zone_basic_ipv4_json_list"
        slist => getvalues("zone_basic_ipv4_json");

      "zone_basic_ipv4_json"
        string => join(", ", "zone_basic_ipv4_json_list");

      "zone6[$(basic_zones)][name]"
        string => '"zone_full": "$(basic_zones)"';

      "zone6[$(basic_zones)][type]"
        string => '"type": "ipv6"';

      "zone_basic_ipv6_json[$(basic_zones)]"
        string => '{ $(zone6[$(basic_zones)][name]), $(zone6[$(basic_zones)][type]) }';

      "zone_basic_ipv6_json_list"
        slist => getvalues("zone_basic_ipv6_json");

      "zone_basic_ipv6_json"
        string => join(", ", "zone_basic_ipv6_json_list");

    interfaces_done::

      "interface_zones"
        slist => getvalues("interfaces");

      "interface_zone_json"
        string => join(", ", "interface_zones");

    bridge_children_done&interfaces_done::

      "bridge_zones"
        slist => getvalues("bridges");

      "bridge_zone_json"
        string => join(", ", "bridge_zones");

      "bridge_children"
        slist => getvalues("bridge_zone_child");

      "bridge_children_json"
        string => join(", ", "bridge_children");

      "zone4_json"
        string => '{ "zones": [ $(interface_zone_json), $(zone_basic_ipv4_json), $(bridge_zone_json), $(bridge_children_json) ] }',
        classes => default:if_ok("zone4_json_ready");

      "zone6_json"
        string => '{ "zones": [ $(interface_zone_json), $(zone_basic_ipv6_json), $(bridge_zone_json), $(bridge_children_json) ] }',
        classes => default:if_ok("zone6_json_ready");

    no_bridge&interfaces_done::

      "zone4_json"
        string => '{ "zones": [ $(interface_zone_json), $(zone_basic_ipv4_json) ] }',
        classes => default:if_ok("zone4_json_ready");

      "zone6_json"
        string => '{ "zones": [ $(interface_zone_json), $(zone_basic_ipv6_json) ] }',
        classes => default:if_ok("zone6_json_ready");

  classes:

    any::

      "no_bridge"
        not => isgreaterthan(length("bridge_zone_list"), "0");

      "have_bridge"
        expression => isgreaterthan(length("bridge_zone_list"), "0");

      "bridge_evaluated"
        expression => "any";

  files:

    zone4_json_ready::

      "$(root)$(file_names.shorewall_zones)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[shorewall_zone])",
        template_method => "mustache",
        template_data => parsejson("$(zone4_json)"),
        classes => shorewall;

      "$(root)$(file_names.shorewall_interfaces)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[shorewall_interface])",
        template_method => "mustache",
        template_data => parsejson("$(zone4_json)"),
        classes => shorewall;

    zone6_json_ready::

      "$(root)$(file_names.shorewall6_zones)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[shorewall6_zone])",
        template_method => "mustache",
        template_data => parsejson("$(zone6_json)"),
        classes => restart_if_repaired("shorewall6");

      "$(root)$(file_names.shorewall6_zones)"
        edit_line => shorewall6_zones,
        classes => restart_if_repaired("shorewall6");

      "$(root)$(file_names.shorewall6_interfaces)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[shorewall6_interface])",
        template_method => "mustache",
        template_data => parsejson("$(zone6_json)"),
        classes => restart_if_repaired("shorewall6");

  methods:

    any::

      "get list of interfaces"
        usebundle => shorewall_interfaces("$(interface_list)", "$(network_config[interfaces][$(interface_list)][type])"),
        useresult => "interfaces",
        classes => default:if_ok("interfaces_done");

    have_bridge::

      "get list of bridge zones"
        usebundle => bridge("$(bridge_zone_list)"),
        useresult => "bridges",
        handle => "have_bridges";

      "get list of children for bridge zones"
        usebundle => bridge_children("$(this.role)", "$(bridge_zone_list)"),
        useresult => "bridge_zone_child",
        depends_on => { "have_bridges" },
        classes => default:if_ok("bridge_children_done");
}
