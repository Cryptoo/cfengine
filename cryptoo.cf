body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/local.cf",
              "cryptoo/system.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/machine.cf",
              "cryptoo/config/network.cf",
              "cryptoo/config/templates.cf"
            };

}

bundle common cryptoo

{

  vars:

    any::

      "bundles"
        slist => {
                   "cryptoo:cryptoo",
                   "cryptoo:file_names",
                   "cryptoo:templates",
                   "cryptoo:local",
                   "cryptoo:network",
                   "cryptoo:machine",
                   "cryptoo:cryptoo_system"
                 };

      "local_inputs"
        slist => lsdir("$(this.promise_dirname)/local/promises", ".*\.cf", "true");

    have_role::

      "configured_role"
        string => readfile("/$(cryptoo:file_names.cryptoo_role)","128");

    have_hostname::

      "configured_hostname"
        string => readfile("/$(cryptoo:file_names.cryptoo_hostname)","128");

    need_role::

      "configured_role"
        string => "undefined";

    have_site_config::

      "site_config"
        data => readjson("/$(cryptoo:file_names.site_config)", 1M),
        classes => default:if_ok("site_config_available");

    need_site_config::

      "site_config"
        data => readjson("/$(cryptoo:templates.template[site_config])", 1M),
        classes => default:if_ok("site_config_available");

  classes:

    any::

      "have_role"
        expression => fileexists("/$(cryptoo:file_names.cryptoo_role)");

      "need_role"
        not => fileexists("/$(cryptoo:file_names.cryptoo_role)");

      "have_hostname"
        expression => fileexists("/$(cryptoo:file_names.cryptoo_hostname)");

      "have_site_config"
        expression => fileexists("/$(cryptoo:file_names.site_config)");

      "need_site_config"
        not => fileexists("/$(cryptoo:file_names.site_config)");

    have_role::

      "role_$(configured_role)"
        expression => "any";

    need_role::

      "role_undefined"
        expression => "any";

    role_master|role_desktop_host::

      "cryptoo_host"
        expression => "any";

}
