body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/site.cf",
              "@(cryptoo:control.guest_inputs)"
            };

}

bundle agent cryptoo_bootstrap

{

  vars:

    any::

      "stage3_amd64_multilib"
        slist => findfiles("/$(directory_names.fs_storage_pm_install)/stage3-amd64-2*.tar.bz2");

      "stage3_amd64_multilib_sorted"
        slist => sort("stage3_amd64_multilib", "lex");

      "stage3_amd64_multilib_sorted_reverse"
        slist => reverse("stage3_amd64_multilib_sorted");

      "stage3_amd64_multilib_best"
        string => nth("stage3_amd64_multilib_sorted_reverse", 0);

      "stage3_amd64_nomultilib"
        slist => findfiles("/$(directory_names.fs_storage_pm_install)/stage3-amd64-nomultilib-2*.tar.bz2");

      "stage3_amd64_nomultilib_sorted"
        slist => sort("stage3_amd64_nomultilib", "lex");

      "stage3_amd64_nomultilib_sorted_reverse"
        slist => reverse("stage3_amd64_nomultilib_sorted");

      "stage3_amd64_nomultilib_best"
        string => nth("stage3_amd64_nomultilib_sorted_reverse", 0);

    default:bootstrap_firewall_external::

      "role"
        string => "firewall_external";

    default:bootstrap_firewall_internal::

      "role"
        string => "firewall_internal";

    default:bootstrap_tor::

      "role"
        string => "tor";

    default:bootstrap_vpn_primary::

      "role"
        string => "vpn_primary";

    default:bootstrap_vpn_server::

      "role"
        string => "vpn_server";

    default:bootstrap_mail_client::

      "role"
        string => "mail_client";

    default:bootstrap_web::

      "role"
        string => "web";

    role_defined::

      "image_file"
        string => "/$(directory_names.fs_libvirt_images)/$(this.role).img";

    bootstrap_server_guest::

      "image_size_mb"
        string => "4096";

    bootstrap_desktop_guest::

      "image_size_mb"
        string => "2048";

  classes:

    default:bootstrap_firewall_external::

      "role_defined"
        expression => "any";

      "bootstrap_server_guest"
        expression => "any";

      "bootstrap_no_multilib"
        expression => "any";

    default:bootstrap_firewall_internal::

      "role_defined"
        expression => "any";

      "bootstrap_server_guest"
        expression => "any";

      "bootstrap_no_multilib"
        expression => "any";

    default:bootstrap_tor::

      "role_defined"
        expression => "any";

      "bootstrap_server_guest"
        expression => "any";

      "bootstrap_no_multilib"
        expression => "any";

    default:bootstrap_vpn_primary::

      "role_defined"
        expression => "any";

      "bootstrap_server_guest"
        expression => "any";

      "bootstrap_no_multilib"
        expression => "any";

    default:bootstrap_vpn_server::

      "role_defined"
        expression => "any";

      "bootstrap_server_guest"
        expression => "any";

      "bootstrap_no_multilib"
        expression => "any";

    default:bootstrap_mail_client::

      "role_defined"
        expression => "any";

      "bootstrap_desktop_guest"
        expression => "any";

      "bootstrap_no_multilib"
        expression => "any";

    default:bootstrap_web::

      "role_defined"
        expression => "any";

      "bootstrap_desktop_guest"
        expression => "any";

      "bootstrap_no_multilib"
        expression => "any";

    role_defined::

      "bootstrap_ready"
        not => fileexists($(this.image_file));

  methods:

    bootstrap_ready::

      "set users and groups"
        usebundle => cryptoo_filesystem("/$(directory_names.fs_mount_cryptoo)","undefined","x86_64","no_multilib"),
        depends_on => { "skeleton_extracted" },
        handle => "users_created";

    bootstrap_server_guest::

      "configure system"
        usebundle => server_guest("/", "$(this.role)", "x86_64"),
        depends_on => { "system_emerged" },
        handle => "filesystem_ready";

  commands:

    bootstrap_ready::

      "/$(file_names.dd_app)"
        args => "if=/dev/zero of=$(this.image_file) bs=1M count=$(this.image_size_mb)",
        handle => "image_created";

      "/$(file_names.losetup_app)"
        args => "-D",
        depends_on => { "image_created" },
        handle => "loop_ready";

      "/$(file_names.losetup_app)"
        args => "/dev/loop0 $(this.image_file)",
        depends_on => { "loop_ready" },
        handle => "loop_attached";

      "/$(file_names.mkfs_app)"
        args => "-t $(site.config[guest_fs][filesystem]) -E nodiscard /dev/loop0",
        depends_on => { "loop_attached" },
        handle => "image_fs_created";

      "/$(file_names.mount_app)"
        args => "-o $(site.config[guest_fs][options]) /dev/loop0 /$(directory_names.fs_mount_cryptoo)",
        depends_on => { "image_fs_created" },
        handle => "image_fs_mounted";

      "/$(file_names.emerge_app)"
        args => "--config-root=/$(directory_names.fs_volatile_images)/server/x86_64/no_multilib/ --root=/$(directory_names.fs_mount_cryptoo) --root-deps --emptytree --quiet @system @$(this.role)",
        depends_on => { "users_created" },
        handle => "system_emerged";

      "/$(file_names.umount_app)"
        args => "/$(directory_names.fs_mount_cryptoo)",
        depends_on => { "filesystem_ready" },
        handle => "image_fs_unmounted";

      "/$(file_names.losetup_app)"
        args => "-D",
        depends_on => { "image_fs_unmounted" },
        handle => "loop_finished";

    bootstrap_no_multilib::

      "/$(file_names.tar_app)"
        args => "-xjpf $(this.stage3_amd64_nomultilib_best) -C /$(directory_names.fs_mount_cryptoo)",
        depends_on => { "image_fs_mounted" },
        handle => "skeleton_extracted";

  reports:

    any::

      "Bootstrapping";

    role_defined::

      "Creating a $(this.role) guest";

}
