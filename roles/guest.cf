body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/common/mounts.cf",
              "cryptoo/common/systemd.cf",
              "cryptoo/config/directory_groups.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/contain.cf",
              "cryptoo/util/perms.cf",
              "@(cryptoo:control.guest_inputs)"
            };

}

bundle agent common_guest(root, role, arch)

{

  classes:

    any::

      "have_systemctl"
        expression => fileexists("$(root)$(file_names.systemd_app)");

      "bootstrap"
        not => strcmp("$(this.root)", "/");

  files:

    any::

      "$(root)$(directory_groups.guest_system)/."
        perms => system,
        create => "true",
        handle => "$(root)$(directory_groups.guest_system)";

      "$(root)$(directory_groups.guest_system_private)/."
        perms => root,
        create => "true",
        handle => "$(root)$(directory_groups.guest_system_private)";

      "$(root)$(file_names.serial_autologin)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[serial_autologin])",
        classes => default:if_repaired("daemon_reload");

      "$(root)$(file_names.fstab)"
        perms => system,
        create => "true",
        edit_template => "/$(cryptoo:templates.template[fstab])",
        classes => default:if_repaired("fstab_repaired"),
        comment => "configure /etc/fstab";

  methods:

    any::

      "configure systemd"
        usebundle => systemd($(this.root), $(this.role));

    fstab_repaired&(!bootstrap)::

      "activate all mountpoints"
        usebundle => mount_all;

  commands:

    daemon_reload&have_systemctl&(!bootstrap)::

      "/$(file_names.systemd_app)"
        args => "daemon-reload",
        contain => basic_chroot($(root));

}
