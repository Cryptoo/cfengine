body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/site.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent mail_server(root)

{

  meta:

    "tags" slist => { "cryptoo_role" };

  vars:

    any::

      "dovecot[protocols]"
        string => "imap sieve";

      "auth[disable_plaintext_auth]"
        string => "yes";

      "mail[mail_location]"
        string => "maildir:/var/spool/mail/%u";

      "imap[mail_max_userip_connections]"
        string => "64";

      "ssl[ssl]"
        string => "required";
      "ssl[ssl_cipher_list]"
        string => "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4";
      "ssl[ssl_prefer_server_ciphers]"
        string => "yes";
      "ssl[ssl_protocols]"
        string => "!SSLv2 !SSLv3";
      "ssl[ssl_cert]"
        string => "</$(file_names.mail_server_crt)";
      "ssl[ssl_key]"
        string => "</$(file_names.mail_server_key)";
      "ssl[ssl_ca]"
        string => "</$(file_names.ca_crt)";

      "postfix[alias_maps]"
        string => "hash:/etc/mail/aliases";
      "postfix[local_recipient_maps]"
        string => "proxy:unix:passwd.byname $alias_maps";
      "postfix[myhostname]"
        string => "mail_server";
      "postfix[mydomain]"
        string => "$(site.config[ddns])";
      "postfix[myorigin]"
        string => "$mydomain";
      "postfix[mydestination]"
        string => "$myhostname, $mydomain, localhost.localnet, localhost, localhost.$mydomain";
      "postfix[relay_domains]"
        string => "$mydestination";
      "postfix[mailbox_command]"
        string => '/usr/libexec/dovecot/dovecot-lda -f "$SENDER" -a "$RECIPIENT"';
      "postfix[transport_maps]"
        string => "hash:/$(file_names.postfix_transports)";
      "postfix[smtp_generic_maps]"
        string => "hash:/$(file_names.postfix_default_map)";
      "postfix[sender_dependent_default_transport_maps]"
        string => "hash:/$(file_names.postfix_sender_map)";
      "postfix[smtp_sasl_auth_enable]"
        string => "yes";
      "postfix[smtp_sasl_password_maps]"
        string => "hash:/$(file_names.postfix_saslpass)";
      "postfix[smtp_sasl_security_options]"
        string => "noanonymous";
      "postfix[smtp_use_tls]"
        string => "yes";
      "postfix[smtp_connect_timeout]"
        string => "180s";
      "postfix[smtp_tls_key_file]"
        string => "/$(file_names.mail_server_key)";
      "postfix[smtp_tls_cert_file]"
        string => "/$(file_names.mail_server_crt)";
      "postfix[smtp_tls_security_level]"
        string => "may";
      "postfix[smtp_tls_policy_maps]"
        string => "hash:/$(file_names.postfix_tls)";
      "postfix[smtp_tls_loglevel]"
        string => "0";
      "postfix[tls_random_source]"
        string => "dev:/dev/urandom";
      "postfix[message_size_limit]"
        string => "1024000000";
      "postfix[mailbox_size_limit]"
        string => "102400000000";
      "postfix[smtpd_sasl_auth_enable]"
        string => "yes";
      "postfix[smtpd_sasl_type]"
        string => "dovecot";
      "postfix[smtpd_sasl_path]"
        string => "private/auth";
      "postfix[smtpd_recipient_restrictions]"
        string => "permit_mynetworks, permit_sasl_authenticated, reject_unauth_destination";
      "postfix[smtpd_use_tls]"
        string => "yes";
      "postfix[smtpd_tls_key_file]"
        string => "/$(file_names.mail_server_key)";
      "postfix[smtpd_tls_cert_file]"
        string => "/$(file_names.mail_server_crt)";
      "postfix[smtpd_tls_loglevel]"
        string => "1";
      "postfix[smtpd_tls_received_header]"
        string => "yes";
      "postfix[smtpd_tls_session_cache_timeout]"
        string => "3600";
      "postfix[smtpd_tls_auth_only]"
        string => "yes";
      "postfix[smtpd_tls_loglevel]"
        string => "0";

      "postfix_tls[smtp.gmail.com]"
        string => "encrypt";

  classes:

    any::

      "have_mail_config"
        expression => fileexists("$(this.root)$(file_names.mail_server_config)");

      "regen_tls"
        expression => makerule("$(this.root)$(file_names.postfix_tls).db", "$(this.root)$(file_names.postfix_tls)");

      "regen_transports"
        expression => makerule("$(this.root)$(file_names.postfix_transports).db", "$(this.root)$(file_names.postfix_transports)");

  files:

    any::

      "$(this.root)$(directory_names.mail_spool)/."
        perms => mail_spool,
        create => "true";

      "$(this.root)$(directory_names.config_dovecot_base)/."
        perms => system,
        create => "true";

      "$(this.root)$(directory_names.config_dovecot)/."
        perms => system,
        create => "true";

      "$(this.root)$(file_names.dovecot_conf)"
        perms => system,
        edit_line => default:set_line_based("cryptoo:mail_server.dovecot", " = ", "\s*=\s*", ".*", "\s*#\s*"),
        classes => default:if_repaired("reload_dovecot");

      "$(this.root)$(file_names.dovecot_auth)"
        perms => system,
        edit_line => default:set_line_based("cryptoo:mail_server.auth", " = ", "\s*=\s*", ".*", "\s*#\s*"),
        classes => default:if_repaired("reload_dovecot");

      "$(this.root)$(file_names.dovecot_mail)"
        perms => system,
        edit_line => default:set_line_based("cryptoo:mail_server.mail", " = ", "\s*=\s*", ".*", "\s*#\s*"),
        classes => default:if_repaired("reload_dovecot");

      "$(this.root)$(file_names.dovecot_imap)"
        perms => system,
        edit_line => default:set_line_based("cryptoo:mail_server.imap", " = ", "\s*=\s*", ".*", "\s*#\s*"),
        classes => default:if_repaired("reload_dovecot");

      "$(this.root)$(file_names.dovecot_ssl)"
        perms => system,
        edit_line => default:set_line_based("cryptoo:mail_server.ssl", " = ", "\s*=\s*", ".*", "\s*#\s*"),
        classes => default:if_repaired("reload_dovecot");

      "$(this.root)$(file_names.dovecot_master)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[dovecot_master])",
        classes => default:if_repaired("reload_dovecot");

      "$(this.root)$(directory_names.config_postfix)/."
        perms => system,
        create => "true";

      "$(this.root)$(file_names.postfix_main)"
        perms => system,
        create => "true",
        edit_line => default:set_line_based("cryptoo:mail_server.postfix", " = ", "\s*=\s*", ".*", "\s*#\s*"),
        classes => postfix;

      "$(this.root)$(file_names.postfix_tls)"
        perms => system,
        create => "true",
        edit_line => default:set_line_based("cryptoo:mail_server.postfix_tls", " ", "\s*", ".*", "\s*#\s*"),
        classes => postfix;

      "$(this.root)$(file_names.postfix_transports)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[postfix_transport])",
        classes => postfix;

  methods:

    have_mail_config::

      "configure fetchmail"
        usebundle => fetchmail("$(this.root)");

    any::

      "configure system as a mail server"
        usebundle => server_guest("$(this.root)", "mail_server", "x86_64", "no_multilib");

  commands:

    reload_dovecot::

      "/$(file_names.systemd_app)"
        args => "restart dovecot",
        contain => silent;

    need_postfix_restart::

      "/$(file_names.systemd_app)"
        args => "restart postfix",
        contain => silent;

    regen_tls::

      "/$(file_names.postmap_app)"
        args => "$(this.root)$(file_names.postfix_tls)",
        contain => silent;

    regen_transports::

      "/$(file_names.postmap_app)"
        args => "$(this.root)$(file_names.postfix_transports)",
        contain => silent;

}
