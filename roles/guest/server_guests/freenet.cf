body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/config.cf",
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/network.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent freenet(root)

{

  meta:

    "tags" slist => { "cryptoo_role" };

  vars:

    any::

      "defined_numbers"
        data => readjson("$(sys.inputdir)/cryptoo/config/defined_numbers.json", 1M);

      "subnet_config"
        data => readjson("/$(file_names.subnet_config)", 1M);

      "freenet_conf[fproxy.allowedHosts]"
        string => "127.0.0.1,0:0:0:0:0:0:0:1,192.168.$(subnet_config[lan]).0/24";
      "freenet_conf[fproxy.bindTo]"
        string => "127.0.0.1,0:0:0:0:0:0:0:1,192.168.$(subnet_config[vpndmz]).$(defined_numbers[freenet])";
      "freenet_conf[fproxy.allowedHostsFullAccess]"
        string => "127.0.0.1,0:0:0:0:0:0:0:1,192.168.$(subnet_config[lan]).0/24";
      "freenet_conf[fproxy.port]"
        string => "$(config.services[freenet][fproxy_port])";
      "freenet_conf[fcp.allowedHosts]"
        string => "127.0.0.1,0:0:0:0:0:0:0:1,192.168.$(subnet_config[lan]).0/24";
      "freenet_conf[fcp.bindTo]"
        string => "127.0.0.1,0:0:0:0:0:0:0:1,192.168.$(subnet_config[vpndmz]).$(defined_numbers[freenet])";
      "freenet_conf[fcp.allowedHostsFullAccess]"
        string => "127.0.0.1,0:0:0:0:0:0:0:1,192.168.$(subnet_config[lan]).0/24";
      "freenet_conf[fcp.port]"
        string => "$(config.services[freenet][fcp_port])";
      "freenet_conf[node.opennet.bindTo]"
        string => "192.168.$(subnet_config[ispdmz]).$(defined_numbers[freenet])";
      "freenet_conf[node.bindTo]"
        string => "192.168.$(subnet_config[ispdmz]).$(defined_numbers[freenet])";
      "freenet_conf[node.opennet.acceptSeedConnections]"
        string => "true";

  files:

    any::

      "$(this.root)$(directory_names.fs_freenet_base)/."
        perms => freenet,
        create => "true";

      "$(this.root)$(file_names.freenet_config)"
        perms => freenet,
        create => "true",
        edit_line => default:set_line_based("cryptoo:freenet.freenet_conf", "=", "\s*=\s*", ".*", "\s*#\s*");

  methods:

    any::

      "configure system as an freenet node"
        usebundle => server_guest("$(this.root)", "freenet", "x86_64", "no_multilib");

}
