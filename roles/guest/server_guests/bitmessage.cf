body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/config.cf",
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/network.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/perms.cf",
            };

}

bundle agent bitmessage(root)

{

  meta:

    "tags" slist => { "cryptoo_role" };

  vars:

    any::

      "defined_numbers"
        data => mergedata("cryptoo:config.defined_numbers");

      "subnet_config"
        data => mergedata("cryptoo:network.subnet_config");

      "bitmessage[apiusername]"
        string => "cryptoo";
      "bitmessage[apipassword]"
        string => "cryptoo";
      "bitmessage[apienabled]"
        string => "true";
      "bitmessage[apiport]"
        string => "$(config.service_info[bitmessage][rpc_port])";
      "bitmessage[apiinterface]"
        string => "127.0.0.1";

      "bmwrapper"
        string => '{ "address": "192.168.$(subnet_config[vpndmz]).$(defined_numbers[bitmessage])"}';

  classes:

    any::

      "bootstrap"
        not => strcmp("$(this.root)", "/");

      "have_bitmessage_config"
        expression => fileexists("$(this.root)$(file_names.bitmessage_conf)");

  files:

    any::

      "$(this.root)$(directory_names.bitmessage_base)/."
        perms => bitmessage,
        create => "true";

      "$(this.root)$(file_names.bitmessage_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => mergedata("cryptoo:config.systemd_services[bitmessage]"),
        classes => default:if_repaired("daemon_reload");

      "$(this.root)$(file_names.bmwrapper_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => mergedata("cryptoo:config.systemd_services[bmwrapper]"),
        classes => default:if_repaired("daemon_reload");

      "$(this.root)$(file_names.bmwrapper_config)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[bmwrapper])",
        template_method => "mustache",
        template_data => parsejson("$(bmwrapper)"),
        classes => default:if_repaired("daemon_reload");

      "$(this.root)$(file_names.bmwrapper_pop_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => mergedata("cryptoo:config.systemd_services[bmwrapper_pop]"),
        classes => default:if_repaired("daemon_reload");

      "$(this.root)$(file_names.bmwrapper_smtp_service)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => mergedata("cryptoo:config.systemd_services[bmwrapper_smtp]"),
        classes => default:if_repaired("daemon_reload");

    have_bitmessage_config::

      "$(this.root)$(file_names.bitmessage_conf)"
        perms => bitmessage,
        create => "false",
        edit_line => default:set_line_based("cryptoo:bitmessage.bitmessage", " = ", "\s*=\s*", ".*", "\s*#\s*"),
        classes => default:if_repaired("reload_bitmessage");

  methods:

    any::

      "configure system as a bitmessage guest"
        usebundle => server_guest("$(this.root)", "bitmessage", "x86_64", "no_multilib");

  commands:

    daemon_reload&(!bootstrap)::

      "$(this.root)$(file_names.systemd_app)"
        args => "daemon-reload";

    reload_bitmessage&(!bootstrap)::

      "/$(file_names.systemd_app)"
        args => "restart bitmessage",
        contain => silent;

}
