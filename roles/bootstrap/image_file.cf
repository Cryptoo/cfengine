body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/util/contain.cf",
              "@(cryptoo:control.guest_inputs)"
            };

}

bundle agent image_file(role, type, multilib)

{

  vars:

    any::

      "role_set"
        string => concat("@", "$(this.role)");

  classes:

    any::

      "bootstrap_$(this.type)"
        expression => "any";

  methods:

    any::

      "create and mount image file"
        usebundle => prepare_image("$(this.role)", "$(this.multilib)"),
        handle => "image_created";

      "set users and groups"
        usebundle => cryptoo_filesystem("/$(directory_names.fs_mount_cryptoo)/","undefined","x86_64","$(this.multilib)"),
        depends_on => { "image_created" },
        handle => "image_ready";

      "install and configure apps"
        usebundle => install_apps("$(this.role)", "$(this.multilib)"),
        depends_on => { "image_ready" },
        classes => default:if_ok("filesystem_ready");

  commands:

    filesystem_ready::

      "/$(file_names.dd_app)"
        args => "if=/dev/urandom of=/$(directory_names.fs_mount_cryptoo)/$(file_names.random_seed) bs=512 count=1",
        handle => "random_seed_created";

      "/$(file_names.rsync_app)"
        args => "-aX $(sys.inputdir)/ /$(directory_names.fs_mount_cryptoo)$(sys.inputdir)",
        depends_on => { "random_seed_created" },
        handle => "cfengine_installed";

      "/$(file_names.umount_app)"
        args => "-l /$(directory_names.fs_mount_cryptoo)",
        depends_on => { "cfengine_installed" },
        handle => "image_fs_unmounted";

      "/$(file_names.losetup_app)"
        args => "-D",
        depends_on => { "image_fs_unmounted" };

}
