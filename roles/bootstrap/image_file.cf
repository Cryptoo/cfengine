body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/contain.cf",
              "cryptoo/util/perms.cf",
              "@(cryptoo:control.guest_inputs)"
            };

}

bundle agent image_file(role, name, type, multilib)

{

  vars:

    any::

      "defined_numbers"
        data => readjson("$(sys.inputdir)/cryptoo/config/defined_numbers.json", 1M);

      "subnet_config"
        data => readjson("/$(file_names.subnet_config)", 1M);

      "firstrun_json"
        string => '{ "master": "192.168.$(subnet_config[lan]).$(defined_numbers[master])" }';

  classes:

    any::

      "bootstrap_$(this.type)"
        expression => "any";

  files:

    image_configured::

      "/$(directory_names.fs_mount_cryptoo)/$(file_names.firstrun)"
        perms => system_exec,
        create => "true",
        edit_template => "/$(templates.template[firstrun])",
        template_method => "mustache",
        template_data => parsejson("$(firstrun_json)"),
        classes => default:if_ok("filesystem_ready");

  methods:

    any::

      "create and mount image file"
        usebundle => prepare_image("$(this.name)", "$(this.multilib)"),
        handle => "image_created";

      "set users and groups"
        usebundle => cryptoo_filesystem("/$(directory_names.fs_mount_cryptoo)/","undefined","x86_64","$(this.multilib)"),
        depends_on => { "image_created" },
        handle => "image_ready";

      "install and configure apps"
        usebundle => install_apps("$(this.role)", "$(this.type)", "$(this.multilib)"),
        depends_on => { "image_ready" },
        handle => "apps_installed";

      "finalize configuration"
        usebundle => cryptoo_filesystem("/$(directory_names.fs_mount_cryptoo)/","undefined","x86_64","$(this.multilib)"),
        depends_on => { "apps_installed" },
        classes => default:if_ok("image_configured");

  commands:

    filesystem_ready::

      "/$(file_names.dd_app)"
        args => "if=/dev/urandom of=/$(directory_names.fs_mount_cryptoo)/$(file_names.random_seed) bs=512 count=1",
        contain => silent,
        handle => "random_seed_created";

      "/$(file_names.rsync_app)"
        args => "-aX /$(sys.inputdir)/ /$(directory_names.fs_mount_cryptoo)/$(sys.inputdir)",
        depends_on => { "random_seed_created" },
        handle => "cfengine_installed";

      "/$(file_names.umount_app)"
        args => "-l /$(directory_names.fs_mount_cryptoo)",
        depends_on => { "cfengine_installed" },
        handle => "image_fs_unmounted";

      "/$(file_names.losetup_app)"
        args => "-D",
        depends_on => { "image_fs_unmounted" };

}
