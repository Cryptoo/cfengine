body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/file_names.cf"
            };

}

bundle agent easy_rsa

{

  vars:

    any::

      "easy_rsa[export KEY_DIR]"
        string => "/$(directory_names.easy_rsa_keys)";
      "easy_rsa[export KEY_SIZE]"
        string => "4096";
      "easy_rsa[export KEY_ORG]"
        string => "$(site.config[ddns])";

  classes:

    any::

      "need_init"
        not => fileexists("/$(directory_names.easy_rsa_keys)");

      "have_init"
        expression => fileexists("/$(directory_names.easy_rsa_keys)");

    have_init::

      "need_ca_crt"
        not => fileexists("/$(file_names.ca_crt_source)");

      "have_ca_crt"
        expression => fileexists("/$(file_names.ca_crt_source)");

      "need_mail_server_crt"
        not => fileexists("/$(file_names.mail_server_crt_source)");

      "need_vpn_server_crt"
        not => fileexists("/$(file_names.vpn_server_crt_source)");

    have_ca_crt::

      "need_dh"
        not => fileexists("/$(file_names.dh_source)");

  files:

    any::

      "/$(file_names.easy_rsa_vars)"
        create => "false",
        edit_line => default:set_line_based("cryptoo:easy_rsa.easy_rsa", "=", "\s*=\s*", ".*", "\s*#\s*");

  commands:

    need_init::

      "/$(file_names.easyrsa_init_app)";

    need_ca_crt::

      "/$(file_names.easyrsa_ca_app)";

    need_dh::

      "/$(file_names.easyrsa_dh_app)";

    need_mail_server_crt::

      "/$(file_names.easyrsa_server_app)"
        args => "mail_server";

    need_vpn_server_crt::

      "/$(file_names.easyrsa_server_app)"
        args => "vpn_server";

}
