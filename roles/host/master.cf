body file control

{

  namespace => "cryptoo";

  inputs => {
              "cryptoo/common/systemd.cf",
              "cryptoo/config/config.cf",
              "cryptoo/config/directory_names.cf",
              "cryptoo/config/templates.cf",
              "cryptoo/util/contain.cf",
              "cryptoo/util/perms.cf"
            };

}

bundle agent master(root)

{

  meta:

    "tags" slist => { "cryptoo_role" };

  vars:

    any::

      "console_autologin"
# This doesn't work for some reason. Maybe Mustache understands json constructs that storejson/parsejson doesn't?
#        string => storejson("config.systemd[console_autologin]");
        string => '
          {
            "sections":
               [
                 { "section": "Service",
                   "values":
                     [
                       { "LHS": "Type", "RHS": "simple" },
                       { "LHS": "ExecStart", "RHS": "" },
                       { "LHS": "ExecStart", "RHS": "-/sbin/agetty --autologin root --noclear %I 38400 linux" }
                     ]
                 }
               ]
          }
        ';


  classes:

    any::

      "have_systemctl"
        expression => fileexists("$(this.root)$(file_names.systemd_app)");

      "need_master_ssh_key"
        not => fileexists("$(this.root)$(file_names.master_ssh_key)");

      "have_master_ssh_key"
        expression => fileexists("$(this.root)$(file_names.master_ssh_key)");

      "need_default_key"
        not => fileexists("$(this.root)$(file_names.default_key_public)");

      "have_default_key"
        expression => fileexists("$(this.root)$(file_names.default_key_public)");

  files:

    any::

      "$(this.root)$(directory_names.fs_storage_backup)/$(config.server_guests)/."
        perms => qemu,
        create => "true";

      "$(this.root)$(file_names.console_autologin)"
        perms => system,
        create => "true",
        edit_template => "/$(templates.template[ini])",
        template_method => "mustache",
        template_data => parsejson($(this.console_autologin)),
        classes => default:if_repaired("daemon_reload");

    need_master_ssh_key&have_default_key::

      "$(this.root)$(file_names.master_ssh_key)"
        perms => system,
        copy_from => default:local_cp("/$(cryptoo:file_names.default_key_public)");


  methods:

    have_master_ssh_key::

      "configure system as a host"
        usebundle => cryptoo:host("x86_64");

      "configure systemd"
        usebundle => systemd("$(this.root)", "master");

  commands:

    daemon_reload&have_systemctl::

      "$(this.root)$(file_names.systemd_app)"
        args => "daemon-reload";

    need_default_key::

      "$(this.root)$(file_names.ssh_keygen_app)"
      args => "-t ed25519 -P \"\" -f /$(file_names.default_key)",
      comment => "Change the passphrase with ssh-keygen -p";

  reports:

    bootstrap::

      "Bootstrapping master in $(this.root)";

}
