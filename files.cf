bundle agent files (root, role)

{

  classes:

    any::

      "need_cryptoo" not => "have_cryptoo";
      "local_role_$(role)" expression => "any";

    role_master&local_role_master::

      "bootable" expression => "any";

  files:

    any::

      "$(root)etc/locale.gen"
        perms => system,
        create => "false",
        edit_line => uncomment_lines_containing("en_US\.UTF-8 UTF-8","#"),
        classes => u_if_repaired("update_locale");

      "$(root)etc/portage/make.conf"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_make_conf.txt";

      "$(root)etc/portage/make.profile"
        move_obstructions => "true",
        link_from => cryptoo_profile("cryptoo");

      "$(root)etc/portage/env/local-distfiles.conf"
        move_obstructions => "true",
        link_from => cryptoo_portage_env("local-distfiles.conf");

      "$(root)etc/portage/env/nosandbox.conf"
        move_obstructions => "true",
        link_from => cryptoo_portage_env("nosandbox.conf");

      "$(root)etc/portage/env/notmpfs.conf"
        move_obstructions => "true",
        link_from => cryptoo_portage_env("notmpfs.conf");

      "$(root)etc/portage/package.env/cryptoo"
        move_obstructions => "true",
        link_from => cryptoo_package_env("cryptoo");

      "$(root)etc/portage/package.keywords/basic-programs"
        move_obstructions => "true",
        link_from => cryptoo_package_keyword("basic-programs");

      "$(root)etc/portage/package.keywords/virtualization"
        move_obstructions => "true",
        link_from => cryptoo_package_keyword("virtualization");

      "$(root)etc/portage/package.mask/basic-programs"
        move_obstructions => "true",
        link_from => cryptoo_package_mask("basic-programs");

      "$(root)etc/portage/package.use/basic-programs"
        move_obstructions => "true",
        link_from => cryptoo_package_use("basic-programs");

      "$(root)etc/portage/package.use/host"
        move_obstructions => "true",
        link_from => cryptoo_package_use("host");

      "$(root)etc/portage/package.use/virtualization"
        move_obstructions => "true",
        link_from => cryptoo_package_use("virtualization");

      "$(root)etc/portage/profile/package.provided"
        move_obstructions => "true",
        link_from => cryptoo_portage_profile("package.provided");

      "$(root)etc/portage/profile/stub/parent"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_profile_parent.txt";

      "$(root)usr/local/portage/metadata/layout.conf"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_local_layout_conf.txt";

      "$(root)usr/local/portage/profiles/repo_name"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_local_repo_name.txt";

      "$(root)usr/src/linux"
        move_obstructions => "true",
        link_from => kernel_dir;

      "$(root)var/lib/portage/world_sets"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_world_sets.txt";

    bootable::

      "$(root)etc/localtime"
        move_obstructions => "true",
        link_from => timezone("UTC");

      "$(root)etc/bash/bashrc"
        perms => system,
        create => "true",
        edit_line => PS1_always_show_full_path,
        edit_line => aliases;

      "$(root)etc/bash/bash_logout"
        perms => system,
        create => "false",
        edit_line => uncomment_lines_containing("clear","#");

      "$(root)etc/env.d/00cryptoo"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_env.txt",
        classes => u_if_repaired("update_env");

      "$(root)etc/env.d/02locale"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_env_locale.txt",
        classes => u_if_repaired("update_env");

      "$(root)etc/env.d/99kernel"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_env_kernel.txt",
        classes => u_if_repaired("update_env");

    local_role_master::

      "$(root)usr/site-local/portage/metadata/layout.conf"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_local_layout_conf.txt";

      "$(root)usr/site-local/portage/profiles/repo_name"
        perms => system,
        create => "true",
        edit_template => "/var/cfengine/inputs/templates/cryptoo_site_local_repo_name.txt";

  commands:

    bootable::

      update_locale::
        "/usr/sbin/locale-gen";

      update_env::
        "/usr/sbin/env-update";

    local_role_master&need_cryptoo::

      "/usr/bin/git clone git://github.com/cryptoo/overlay /$(cryptoo.dist_root)";

  methods:

    local_role_master::

      "build kernel configs"
        usebundle => kconfig("host");
}

bundle edit_line PS1_always_show_full_path

{
    replace_patterns:

      "(.*PS1=.*)W(.*)"
        replace_with => PS1_small_w;
}

bundle edit_line aliases

{
    insert_lines:

      "alias ls='ls -FADv -I .keep --color=auto'$(const.n)alias nano='nano -w'"
        location => after_unset;
}

body location after_unset

{
    select_line_matching => "unset.*use_color.*safe_term.*match_lhs.*";
    before_after => "after";
}

body replace_with PS1_small_w

{
    replace_value => "$(match.1)w$(match.2)";
}

body link_from cryptoo_portage_env(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.dist_portage)/env/$(x)";
}

body link_from cryptoo_package_env(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.dist_portage)/package.env/$(x)";
}

body link_from cryptoo_package_keyword(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.dist_portage)/package.keywords/$(x)";
}

body link_from cryptoo_package_mask(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.dist_portage)/package.mask/$(x)";
}

body link_from cryptoo_package_unmask(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.dist_portage)/package.unmask/$(x)";
}

body link_from cryptoo_package_use(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.dist_portage)/package.use/$(x)";
}

body link_from cryptoo_portage_profile(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.dist_portage)/profile/$(x)";
}

body link_from cryptoo_profile(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/$(cryptoo.profile_root)/$(x)";
}

body link_from timezone(x)

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/usr/share/zoneinfo/$(x)";
}

body link_from kernel_dir

{
     link_type => "symlink";
     when_no_source => "force";
     source => "/usr/site-local/src/linux";
}
