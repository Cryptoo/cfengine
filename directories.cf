bundle agent directories(root, role)

{

  classes:

    any::

      "local_role_$(role)" expression => "any";
      "storage_mounted" expression => regline("device /dev/mapper/hydrogen-storage mounted on $(root)$(directory_names.fs_storage_base).*", $(file_names.mount_info));

  files:

    any::

      "$(root)/."
        perms => system,
        create => "true",
        handle => "$(root)";

      "$(root)$(directory_groups.common_system)/."
        perms => system,
        create => "true",
        handle => "$(root)$(directory_groups.common_system)";

      "$(root)$(directory_groups.common_system_private)/."
        perms => root,
        create => "true",
        handle => "$(root)$(directory_groups.common_system_private)";

      "$(root)$(directory_groups.common_open)/."
        perms => system_tmp,
        create => "true",
        handle => "$(root)$(directory_groups.common_open)";

      "$(root)$(directory_groups.common_pm)/."
        perms => portage,
        create => "true",
        handle => "$(root)$(directory_groups.common_pm)";

      "$(root)$(directory_groups.common_pm_open)/."
        perms => portage_open,
        create => "true",
        handle => "$(root)$(directory_groups.common_pm_open)";

      "$(root)$(directory_names.fs_mount_shared)/."
        depends_on => { "user_guest" },
        perms => guest,
        create => "true",
        handle => "$(root)$(directory_names.fs_mount_shared)";

    local_role_master::

      "$(root)$(directory_groups.host_system)/."
        perms => system,
        create => "true",
        handle => "$(root)$(directory_groups.common_system)";

    local_role_master&storage_mounted::

      "$(root)$(directory_groups.host_system_storage)/."
        perms => system,
        create => "true",
        handle => "$(root)$(directory_groups.host_system_storage)";

      "$(root)$(directory_groups.host_pm)/."
        perms => portage,
        create => "true",
        handle => "$(root)$(directory_groups.host_pm)";

      "$(root)$(directory_groups.host_pm_open)/."
        perms => portage_open,
        create => "true",
        handle => "$(root)$(directory_groups.host_pm_open)";

      "$(root)$(directory_names.fs_storage_shared)/."
        depends_on => { "user_guest" },
        perms => guest,
        create => "true",
        handle => "$(root)$(directory_names.fs_storage_shared)";

  users:

      "guest"
        handle => "user_guest",
        policy => "present",
        home_dir => "/mnt/shared",
        uid => "405",
        group_primary => "users",
        shell => "/sbin/nologin";

}

body perms guest

{
      mode  => "0664";
      owners  => { "guest" };
      groups  => { "users" };
}

body perms portage

{
      mode  => "0644";
      owners  => { "portage" };
      groups  => { "portage" };
}

body perms portage_open

{
      mode  => "0664";
      owners  => { "portage" };
      groups  => { "portage" };
}

body perms system

{
      mode  => "0644";
      owners  => { "root" };
      groups  => { "root" };
}

body perms root

{
      mode  => "0600";
      owners  => { "root" };
      groups  => { "root" };
}

body perms system_tmp

{
      mode  => "1666";
      owners  => { "root" };
      groups  => { "root" };
}
